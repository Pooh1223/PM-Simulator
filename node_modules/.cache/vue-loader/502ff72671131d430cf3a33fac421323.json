{"remainingRequest":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Program\\Code\\Web\\Project\\precious_memories1\\src\\board\\components\\TempCard.vue?vue&type=template&id=1a956bcb&","dependencies":[{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\src\\board\\components\\TempCard.vue","mtime":1630649544487},{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1625907638133},{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1625907660845},{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1625907638133},{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\vue-loader\\lib\\index.js","mtime":1625907660845}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}