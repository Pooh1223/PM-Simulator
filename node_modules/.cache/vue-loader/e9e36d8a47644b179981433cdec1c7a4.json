{"remainingRequest":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Program\\Code\\Web\\Project\\precious_memories1\\src\\components\\Point.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\src\\components\\Point.vue","mtime":1628687031732},{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Point.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Point.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"container\">\r\n\r\n    <b-modal \r\n      id=\"point-detail\"\r\n      ref=\"point-modal\"\r\n      scrollable\r\n      title=\"Card-Detail\"\r\n      hide-backdrop\r\n      :data=\"modalData\">\r\n      <div class=\"card-container\">\r\n        <img :src=\"modalData === null ? '../PM_Back.jpg' : modalData.detail.img_url\" />\r\n        <div class=\"card-attr\">\r\n          <!--<b-table striped hover :items=\"modalData === null ? [] : addInArray(modalData.detail)\"></b-table>-->\r\n\r\n          <table class=\"table table-striped\">\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <b-button\r\n                    class=\"btn-line\"\r\n                    variant=\"outline-danger\"\r\n                    @click=\"usePointSource(modalData.order - 1)\"\r\n                    >\r\n                    {{card_reset[modalData.order - 1]}}\r\n                  </b-button>\r\n                </td>\r\n              </tr>\r\n              <tr\r\n                v-for=\"(attr, index) in Object.entries(modalData.detail)\"\r\n                :key=\"attr.card_number\"\r\n                >\r\n                <th v-if=\"showTable(index)\">{{attr[0]}}</th>\r\n                <td \r\n                  :class=\"textChange.includes(index) ? 'text-danger' : 'text-dark'\"\r\n                  v-if=\"showTable(index)\"\r\n                  >\r\n                  {{attr[1]}}\r\n                </td>\r\n                \r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </b-modal>\r\n\r\n    <draggable\r\n      class=\"point-list\"\r\n      tag=\"div\"\r\n      v-model=\"card_list\"\r\n      v-bind=\"dragOptions\"\r\n      :emptyInsertThreshold=\"150\"\r\n      @start=\"drag = true\"\r\n      @end=\"dropTest\"\r\n      :move=\"dropArea\"\r\n    >\r\n      <transition-group\r\n        id=\"points\"\r\n        \r\n        type=\"transition\"\r\n        :name=\"!drag ? 'flip-list' : null\"\r\n      >\r\n        <div\r\n          v-for=\"(element,index) in card_list\"\r\n          :key=\"element.order\"\r\n          :class=\"index == card_list.length - 1 ? 'point last-point rotatem90' : 'point rotatem90' \"\r\n          v-b-modal.point-detail\r\n          @click=\"openModal(element)\"\r\n        >\r\n          <!--:style=\"{backgroundImage : 'url(' + test1 + ')' }\"-->\r\n          <div\r\n            class=\"point-cards\"\r\n          >\r\n            <img :src=\"element.detail.img_url\" :style=\"{opacity: source_used[element.order - 1]}\" />\r\n            <i\r\n              :class=\"\r\n                element.fixed ? 'fa fa-anchor' : 'glyphicon glyphicon-pushpin'\r\n              \"\r\n              @click=\"element.fixed = !element.fixed\"\r\n              aria-hidden=\"true\"\r\n            ></i>\r\n          </div>\r\n          \r\n        </div>\r\n      </transition-group>\r\n    </draggable>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport draggable from \"vuedraggable\";\r\n\r\n//const message = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"];\r\nconst showd = [false,false,false,false,false,false,false,false,false];\r\nconst card_used = [1,1,1,1,1,1,1];\r\nconst cards_state = [\"Use\",\"Use\",\"Use\",\"Use\",\"Use\",\"Use\",\"Use\",\"Use\"];\r\n\r\nexport default {\r\n  name: \"points\",\r\n  display: \"Points\",\r\n  order: 6,\r\n  components: {\r\n    draggable,\r\n  },\r\n  data() {\r\n    //const rowofcard = 5;\r\n    //const mapped_list = message.map((name, index) => {\r\n    //  return { name, order: index + 1 };\r\n    //});\r\n\r\n    const mydata = require(\"../data.json\");\r\n    //console.log(mydata);\r\n    const tester = mydata.map((detail, index) => {\r\n      return {detail, order: index + 1, excost: 0, exsource: 0, exap: 0, exdp: 0, overlap: []};\r\n    });\r\n    console.log(tester);\r\n    //console.log(tester.slice(0,1));\r\n\r\n    return {\r\n      card_list: tester.slice(0,7),\r\n      drag: false,\r\n      modalData: tester[0],\r\n      source_used: card_used,\r\n      card_reset: cards_state,\r\n      showDialog: showd,\r\n      textChange: [],\r\n      test1: require('../PM_Back.jpg'),\r\n      test2: \"http://www.p-memories.com/images/product/DNMC3/DNMC3_01-011b.jpg\",\r\n\r\n      from_which_card: null,\r\n      lastPlace: null,\r\n      lastPlaceId: 0,\r\n      timer: setTimeout(() => {\r\n              this.lastPlace = null;\r\n              console.log(\"kill last place\");\r\n            }),\r\n    };\r\n  },\r\n  methods: {\r\n    openModal(data) {\r\n      console.log(\"jizz:\" + data);\r\n      this.modalData = data;\r\n    },\r\n    // dialog\r\n    openDialog (data) {\r\n      //this.showDialog[data] = !this.showDialog[data];\r\n      // vue can't detect an element changed or not in an array\r\n\r\n      this.showDialog = this.showDialog.map((el,i) => \r\n        i === data ? !el : el\r\n      );\r\n      this.from_which_card = data;\r\n      console.log(\"it should open!\");\r\n      console.log(this.card_list);\r\n      console.log(this.showDialog);\r\n    },\r\n\r\n    // modal table\r\n    \r\n    addInArray(data) {\r\n      return [data];\r\n    },\r\n    showTable(id) {\r\n      return (id != 0);\r\n    },\r\n    usePointSource(id) {\r\n      this.source_used = this.source_used.map((el,i) => \r\n        i === id ? (1.3 - el) : el\r\n      );\r\n\r\n      if(this.card_reset[id] == \"Reset\"){\r\n        this.card_reset.splice(id,1,\"Use\");\r\n      } else {\r\n        this.card_reset.splice(id,1,\"Reset\");\r\n      }\r\n\r\n      this.$refs[\"point-modal\"].hide();\r\n\r\n      console.log(this.source_used);\r\n    },\r\n\r\n    // drop\r\n    isStackArea(placeName){\r\n      if(placeName == \"decks\" || placeName == \"discards\" || placeName == \"ex-decks\" || placeName == \"excludeds\"){\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    },\r\n    dropArea(place){\r\n      console.log(\"move\");\r\n      console.log(place);\r\n\r\n      clearTimeout(this.timer);\r\n\r\n      this.lastPlace = place.to.getAttribute(\"id\");\r\n      \r\n      this.timer = setTimeout(() => {\r\n        this.lastPlace = null;\r\n        console.log(\"kill last place\");\r\n      },50);\r\n\r\n      this.lastPlaceId = place.draggedContext.index;\r\n      this.dragCard = place.draggedContext.element;\r\n\r\n      return this.isStackArea(place.to.getAttribute(\"id\"));\r\n    },\r\n    dropTest(data) {\r\n      this.drag = false;\r\n      let dropCard = this.dragCard;\r\n      let place = this.lastPlace;\r\n\r\n      // ms for re-set properDrop \r\n      let disable_first_drop = 70;\r\n\r\n      // check whether the card is at the same area\r\n      // but its ghost changed the position before it drop\r\n\r\n      if(this.card_list[this.lastPlaceId] != this.dragCard || typeof this.card_list[this.lastPlaceId] == \"undefined\"){\r\n\r\n        disable_first_drop = 0;\r\n\r\n        // ghost probably lie in somewhere else\r\n\r\n        switch(data.to.getAttribute(\"id\")){\r\n          case \"hands\":\r\n            this.$bus.$emit(\"cancel-hand-drop\",data.newDraggableIndex);\r\n            this.$bus.$emit(\"add-to-deck-again\",this.dragCard,data.to.getAttribute(\"area-name\"));\r\n            break;\r\n          case \"mains\":\r\n            this.$bus.$emit(\"cancel-main-drop\",data.newDraggableIndex);\r\n            this.$bus.$emit(\"add-to-deck-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n            break;\r\n          case \"supports\":\r\n            this.$bus.$emit(\"cancel-support-drop\",data.newDraggableIndex);\r\n            this.$bus.$emit(\"add-to-deck-again\",dropCard,data.to.getAttribute(\"area-name\")); \r\n            break;\r\n          case \"points\":\r\n            //this.$bus.$emit(\"cancel-point-drop\",data.newDraggableIndex);\r\n            //this.$bus.$emit(\"add-to-deck-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n\r\n            if(data.to === data.from && this.card_list[data.newDraggableIndex] === dropCard){\r\n              // implies that the dragged card only changes its position in the original area\r\n              \r\n              this.lastPlaceId = data.newDraggableIndex;\r\n              //this.$bus.$emit(\"add-to-deck-again\",dropCard);\r\n              this.$bus.$emit(\"add-to-again\",this.dragCard,place);\r\n              this.card_list.splice(this.lastPlaceId,1);\r\n              console.log(\"in change id\");\r\n            }\r\n            break;\r\n          case \"temp-area\":\r\n            // special case: it will affect deck-stack area too\r\n            //this.$bus.$emit(\"cancel-temp-drop\",data.newDraggableIndex);\r\n\r\n            // args_1: where, args_2: index\r\n            this.$bus.$emit(\"cancel-stack-drop\",data.to.getAttribute(\"area-name\"),data.newDraggableIndex);\r\n\r\n            // case when temp area is the same with stack\r\n            // since we use openTemp to refresh the list\r\n            // need to check whether the area-name is same with lastPlace\r\n\r\n            //this.$bus.$emit(\"add-to-deck-again\",this.dragCard,data.to.getAttribute(\"area-name\"));\r\n\r\n            this.$bus.$emit(\"add-to-again\",this.dragCard,place,data.to.getAttribute(\"area-name\"));\r\n\r\n            break;\r\n        }\r\n\r\n        console.log(\"point to deck error\");\r\n      }\r\n\r\n      this.$bus.$emit(\"card-stack-to-deck-stack\",dropCard,disable_first_drop,place,\"point\");\r\n      console.log(\"emit dropCard to deck\");\r\n\r\n    },\r\n    drop(data) {\r\n      this.drag = false;\r\n      let dropCard = this.dragCard;\r\n      let place = this.lastPlace;\r\n\r\n      // ms for re-set properDrop \r\n      let disable_first_drop = 70;\r\n\r\n      // check whether the card is at the same area\r\n      // but its ghost changed the position before it drop\r\n\r\n      if(place == \"decks\") {\r\n\r\n        if(this.card_list[this.lastPlaceId] != this.dragCard || typeof this.card_list[this.lastPlaceId] == \"undefined\"){\r\n\r\n          disable_first_drop = 0;\r\n\r\n          // ghost probably lie in somewhere else\r\n\r\n          switch(data.to.getAttribute(\"id\")){\r\n            case \"hands\":\r\n              this.$bus.$emit(\"cancel-hand-drop\",data.newDraggableIndex);\r\n              this.$bus.$emit(\"add-to-deck-again\",this.dragCard,data.to.getAttribute(\"area-name\"));\r\n              break;\r\n            case \"mains\":\r\n              this.$bus.$emit(\"cancel-main-drop\",data.newDraggableIndex);\r\n              this.$bus.$emit(\"add-to-deck-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n              break;\r\n            case \"supports\":\r\n              this.$bus.$emit(\"cancel-support-drop\",data.newDraggableIndex);\r\n              this.$bus.$emit(\"add-to-deck-again\",dropCard,data.to.getAttribute(\"area-name\")); \r\n              break;\r\n            case \"points\":\r\n              //this.$bus.$emit(\"cancel-point-drop\",data.newDraggableIndex);\r\n              //this.$bus.$emit(\"add-to-deck-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n\r\n              if(data.to === data.from && this.card_list[data.newDraggableIndex] === dropCard){\r\n                // implies that the dragged card only changes its position in the original area\r\n                \r\n                this.lastPlaceId = data.newDraggableIndex;\r\n                this.$bus.$emit(\"add-to-deck-again\",dropCard);\r\n                this.card_list.splice(this.lastPlaceId,1);\r\n                console.log(\"in change id\");\r\n              }\r\n              break;\r\n            case \"temp-area\":\r\n              // special case: it will affect deck-stack area too\r\n              //this.$bus.$emit(\"cancel-temp-drop\",data.newDraggableIndex);\r\n\r\n              // args_1: where, args_2: index\r\n              this.$bus.$emit(\"cancel-stack-drop\",data.to.getAttribute(\"area-name\"),data.newDraggableIndex);\r\n\r\n              // case when temp area is the same with stack\r\n              // since we use openTemp to refresh the list\r\n              // need to check whether the area-name is same with lastPlace\r\n\r\n              this.$bus.$emit(\"add-to-deck-again\",this.dragCard,data.to.getAttribute(\"area-name\"));\r\n\r\n              break;\r\n          }\r\n\r\n          console.log(\"point to deck error\");\r\n        }\r\n\r\n        this.$bus.$emit(\"point-to-deck\",dropCard,disable_first_drop);\r\n        console.log(\"emit dropCard to deck\");\r\n\r\n      } else if(place == \"discards\"){\r\n\r\n        if(this.card_list[this.lastPlaceId] != this.dragCard || typeof this.card_list[this.lastPlaceId] == \"undefined\"){\r\n\r\n          disable_first_drop = 0;\r\n\r\n          // ghost probably lie in somewhere else\r\n\r\n          switch(data.to.getAttribute(\"id\")){\r\n            case \"hands\":\r\n              this.$bus.$emit(\"cancel-hand-drop\",data.newDraggableIndex);\r\n              this.$bus.$emit(\"add-to-discard-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n              break;\r\n            case \"mains\":\r\n              this.$bus.$emit(\"cancel-main-drop\",data.newDraggableIndex);\r\n              this.$bus.$emit(\"add-to-discard-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n              break;\r\n            case \"supports\":\r\n              this.$bus.$emit(\"cancel-support-drop\",data.newDraggableIndex);\r\n              this.$bus.$emit(\"add-to-discard-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n\r\n              break;\r\n            case \"points\":\r\n              //this.$bus.$emit(\"cancel-point-drop\",data.newDraggableIndex);\r\n              //this.$bus.$emit(\"add-to-discard-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n\r\n              // since you change the ghost position before drop to stack\r\n              // it might cause error since the lastPlaceId is no longer the same\r\n\r\n              if(data.to === data.from && this.card_list[data.newDraggableIndex] === dropCard){\r\n                // implies that the dragged card only changes its position in the original area\r\n                \r\n                this.lastPlaceId = data.newDraggableIndex;\r\n                this.$bus.$emit(\"add-to-discard-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n                this.card_list.splice(this.lastPlaceId,1);\r\n                console.log(\"in change id\");\r\n              }\r\n              break;\r\n            case \"temp-area\":\r\n              // special case: it will affect deck-stack area too\r\n              //this.$bus.$emit(\"cancel-temp-drop\",data.newDraggableIndex);\r\n\r\n              // args_1: where, args_2: index\r\n              this.$bus.$emit(\"cancel-stack-drop\",data.to.getAttribute(\"area-name\"),data.newDraggableIndex);\r\n\r\n              // case when temp area is the same with stack\r\n              // since we use openTemp to refresh the list\r\n              // need to check whether the area-name is same with lastPlace\r\n\r\n              this.$bus.$emit(\"add-to-discard-again\",this.dragCard,data.to.getAttribute(\"area-name\"));\r\n\r\n              break;\r\n          }\r\n\r\n          console.log(\"point to discard error\");\r\n        }\r\n\r\n        this.$bus.$emit(\"point-to-discard\",dropCard,disable_first_drop);\r\n        console.log(\"emit dropCard to discard\");\r\n\r\n      } else if(place == \"ex-decks\") {\r\n\r\n        if(this.card_list[this.lastPlaceId] != this.dragCard || typeof this.card_list[this.lastPlaceId] == \"undefined\"){\r\n\r\n          disable_first_drop = 0;\r\n\r\n          // ghost probably lie in somewhere else\r\n\r\n          switch(data.to.getAttribute(\"id\")){\r\n            case \"hands\":\r\n              this.$bus.$emit(\"cancel-hand-drop\",data.newDraggableIndex);\r\n              this.$bus.$emit(\"add-to-ex-deck-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n              break;\r\n            case \"mains\":\r\n              this.$bus.$emit(\"cancel-main-drop\",data.newDraggableIndex);\r\n              this.$bus.$emit(\"add-to-ex-deck-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n              break;\r\n            case \"supports\":\r\n              this.$bus.$emit(\"cancel-support-drop\",data.newDraggableIndex);\r\n              this.$bus.$emit(\"add-to-ex-deck-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n              \r\n              break;\r\n            case \"points\":\r\n              //this.$bus.$emit(\"cancel-point-drop\",data.newDraggableIndex);\r\n              //this.$bus.$emit(\"add-to-ex-deck-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n\r\n              if(data.to === data.from && this.card_list[data.newDraggableIndex] === dropCard){\r\n                // implies that the dragged card only changes its position in the original area\r\n                \r\n                this.lastPlaceId = data.newDraggableIndex;\r\n                this.$bus.$emit(\"add-to-ex-deck-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n                this.card_list.splice(this.lastPlaceId,1);\r\n                console.log(\"in change id\");\r\n              }\r\n              break;\r\n            case \"temp-area\":\r\n              // special case: it will affect deck-stack area too\r\n              //this.$bus.$emit(\"cancel-temp-drop\",data.newDraggableIndex);\r\n\r\n              // args_1: where, args_2: index\r\n              this.$bus.$emit(\"cancel-stack-drop\",data.to.getAttribute(\"area-name\"),data.newDraggableIndex);\r\n\r\n              // case when temp area is the same with stack\r\n              // since we use openTemp to refresh the list\r\n              // need to check whether the area-name is same with lastPlace\r\n\r\n              this.$bus.$emit(\"add-to-ex-deck-again\",this.dragCard,data.to.getAttribute(\"area-name\"));\r\n\r\n              break;\r\n          }\r\n\r\n          console.log(\"point to ex-deck error\");\r\n        }\r\n\r\n        this.$bus.$emit(\"point-to-ex-deck\",dropCard,disable_first_drop);\r\n        console.log(\"emit dropCard to discard\");\r\n\r\n      } else if(place == \"excludeds\") {\r\n\r\n        if(this.card_list[this.lastPlaceId] != this.dragCard || typeof this.card_list[this.lastPlaceId] == \"undefined\"){\r\n\r\n          disable_first_drop = 0;\r\n\r\n          // ghost probably lie in somewhere else\r\n\r\n          switch(data.to.getAttribute(\"id\")){\r\n            case \"hands\":\r\n              this.$bus.$emit(\"cancel-hand-drop\",data.newDraggableIndex);\r\n              this.$bus.$emit(\"add-to-excluded-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n              break;\r\n            case \"mains\":\r\n              this.$bus.$emit(\"cancel-main-drop\",data.newDraggableIndex);\r\n              this.$bus.$emit(\"add-to-excluded-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n              break;\r\n            case \"supports\":\r\n              this.$bus.$emit(\"cancel-support-drop\",data.newDraggableIndex);\r\n              this.$bus.$emit(\"add-to-excluded-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n              break;\r\n            case \"points\":\r\n              //this.$bus.$emit(\"cancel-point-drop\",data.newDraggableIndex);\r\n              //this.$bus.$emit(\"add-to-excluded-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n\r\n              if(data.to === data.from && this.card_list[data.newDraggableIndex] === dropCard){\r\n                // implies that the dragged card only changes its position in the original area\r\n                \r\n                this.lastPlaceId = data.newDraggableIndex;\r\n                this.$bus.$emit(\"add-to-excluded-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n                this.card_list.splice(this.lastPlaceId,1);\r\n                console.log(\"in change id\");\r\n              }\r\n              break;\r\n            case \"temp-area\":\r\n              // special case: it will affect deck-stack area too\r\n              //this.$bus.$emit(\"cancel-temp-drop\",data.newDraggableIndex);\r\n\r\n              // args_1: where, args_2: index\r\n              this.$bus.$emit(\"cancel-stack-drop\",data.to.getAttribute(\"area-name\"),data.newDraggableIndex);\r\n\r\n              // case when temp area is the same with stack\r\n              // since we use openTemp to refresh the list\r\n              // need to check whether the area-name is same with lastPlace\r\n\r\n              this.$bus.$emit(\"add-to-excluded-again\",this.dragCard,data.to.getAttribute(\"area-name\"));\r\n\r\n              break;\r\n          }\r\n\r\n          console.log(\"point to excluded error\");\r\n        }\r\n\r\n        this.$bus.$emit(\"point-to-excluded\",dropCard,disable_first_drop);\r\n      }\r\n\r\n      console.log(\"test\");\r\n      console.log(place);\r\n      console.log(this.lastPlace);\r\n      console.log(data);\r\n      console.log(data.to);\r\n      console.log(data.to.getAttribute(\"area-name\"));\r\n      console.log(data.from);\r\n    },\r\n  },\r\n  computed: {\r\n    dragOptions() {\r\n      return {\r\n        animation: 200,\r\n        group: \"description\",\r\n        disabled: false,\r\n        ghostClass: \"ghost\",\r\n      };\r\n    },\r\n  },\r\n  mount() {\r\n    this.$bus.$on(\"able-to-remove\",(where) => {\r\n      if(where == \"point\"){\r\n        this.card_list.splice(this.lastPlaceId,1);\r\n      }\r\n    });\r\n\r\n    this.$bus.$on(\"cancel-point-drop\",(id) => {\r\n      this.card_list.splice(id,1);\r\n      console.log(\"cancel point drop: \" + id);\r\n    });\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.button {\r\n  margin-top: 35px;\r\n}\r\n.flip-list-move {\r\n  transition: transform 0.5s;\r\n}\r\n.no-move {\r\n  transition: transform 0s;\r\n}\r\n.ghost {\r\n  opacity: 0.5;\r\n  background: #c8ebfb;\r\n}\r\n.point-list {\r\n  min-height: 20px;\r\n  max-width: 100%;\r\n  padding: 0;\r\n}\r\n.point-cards {\r\n  padding: 0;\r\n}\r\n.point {\r\n  cursor: move;\r\n  float: left;\r\n  //width: 50%;\r\n  //height: 300px;\r\n  //background-image: url(\"../PM_Back_Side.jpg\");\r\n  background-size: 100%;\r\n  background-repeat: no-repeat;\r\n  //background-position: center;\r\n  padding: 0;\r\n}\r\n.last-point {\r\n  padding: 0;\r\n}\r\n\r\n.point i {\r\n  cursor: pointer;\r\n}\r\n.point img {\r\n  vertical-align: top;\r\n  max-width: 100%;\r\n}\r\n\r\n.rotatem90 {\r\n  //background-image: url(\"../PM_Back_Side.jpg\") 0 0 repeat;\r\n  //background-size: 100%;\r\n  //background-repeat: no-repeat;\r\n  -webkit-transform: rotate(-90deg);\r\n  -moz-transform: rotate(-90deg);\r\n  -ms-transform: rotate(-90deg);\r\n  -o-transform: rotate(-90deg);\r\n  transform: rotate(-90deg);\r\n}\r\n</style>\r\n"]}]}