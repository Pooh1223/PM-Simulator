{"remainingRequest":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Program\\Code\\Web\\Project\\precious_memories1\\src\\index\\components\\CardFilter.vue?vue&type=template&id=45da129b&","dependencies":[{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\src\\index\\components\\CardFilter.vue","mtime":1629708243902},{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}