{"remainingRequest":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\babel-loader\\lib\\index.js!D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Program\\Code\\Web\\Project\\precious_memories1\\src\\board\\components\\TempCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\src\\board\\components\\TempCard.vue","mtime":1630830392958},{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1625907638133},{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\babel-loader\\lib\\index.js","mtime":1625907637969},{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1625907638133},{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\vue-loader\\lib\\index.js","mtime":1625907660845}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["TempCard.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"container\">\r\n\r\n    <!-- Upload your deck -->\r\n\r\n    <b-modal\r\n      id=\"deck-upload\"\r\n      title=\"Deck Upload\"\r\n      ref=\"upload-modal\"\r\n      @ok=\"ok\"\r\n      ok-only\r\n      scrollable\r\n      no-close-on-backdrop\r\n      no-close-on-esc\r\n      visible\r\n      >\r\n        <div>\r\n          <b-form-file\r\n            v-model=\"upload_deck\"\r\n            :state=\"Boolean(upload_deck)\"\r\n            placeholder=\"Choose a file or drop it here...\"\r\n            drop-placeholder=\"Drop file here...\"\r\n            id=\"selected\"\r\n            \r\n          ></b-form-file>\r\n          \r\n        </div>\r\n        <b-button @click=\"readDeck\">Preview</b-button>\r\n\r\n        <div id=\"error_notify\">\r\n          <pre class=\"text-danger\"> {{this.deckErrMsg}} </pre>\r\n        </div>\r\n\r\n        <br>\r\n        <br>\r\n        <h5>Preview of deck</h5>\r\n\r\n        <div>\r\n          <b-list-group>\r\n            <b-list-group-item>\r\n              <h5> Main Deck: </h5>\r\n\r\n              <div class=\"row\">\r\n                <template v-for=\"element in upload_main\">\r\n                  <div\r\n                    class=\"col-2\"\r\n                    v-for=\"card in element.cnt\"\r\n                    :key=\"element.detail.card_number + card\"\r\n                    style=\"padding-left: 0px; padding-right: 0px;\"\r\n                    >\r\n\r\n                    <img\r\n                      :src=\"element.detail.img_url\"\r\n                      title=\"Click to check out detail\"\r\n                      class=\"deck-img-tb\"\r\n                      alt=\"error\">\r\n\r\n                  </div>\r\n                </template>\r\n              </div>\r\n\r\n            </b-list-group-item>\r\n\r\n            <b-list-group-item>\r\n              <h5> Ex-Deck: </h5>\r\n\r\n              <div class=\"row\">\r\n                <template v-for=\"element in upload_ex\">\r\n                  <div\r\n                    class=\"col-2\"\r\n                    v-for=\"card in element.cnt\"\r\n                    :key=\"element.detail.card_number + card\"\r\n                    style=\"padding-left: 0px; padding-right: 0px;\"\r\n                    >\r\n\r\n                    <img\r\n                      :src=\"element.detail.img_url\"\r\n                      title=\"Click to check out detail\"\r\n                      class=\"deck-img-tb\"\r\n                      alt=\"error\">\r\n\r\n                  </div>\r\n                </template>\r\n              </div>\r\n            </b-list-group-item>\r\n          </b-list-group>\r\n        </div>\r\n        \r\n    </b-modal>\r\n\r\n    <strong> {{title_from}} {{this.card_list.length}} 枚</strong>\r\n    <draggable\r\n      class=\"card-list\"\r\n      tag=\"div\"\r\n      v-model=\"card_list\"\r\n      v-bind=\"dragOptions\"\r\n      :emptyInsertThreshold=\"150\"\r\n      @start=\"drag = true\"\r\n      @end=\"drag = false\"\r\n      @add=\"updateAddTo\"\r\n      @remove=\"updateRemoveTo\"\r\n    >\r\n      <transition-group\r\n        id=\"temp-area\"\r\n        :area-name=\"title_from\"\r\n        class=\"row\"\r\n        type=\"transition\"\r\n        :name=\"!drag ? 'flip-list' : null\"\r\n      >\r\n        \r\n        <div\r\n          class=\"item col\"\r\n          v-for=\"(element, index) in card_list\"\r\n          :key=\"'temp-' + index\"\r\n          :class = \"index % 10 == 0 ? 'item col-1' : 'item col-1' \"\r\n        >\r\n          <img :src=\"title_from == 'Deck' ? back_img : element.detail.img_url\" />\r\n          <i\r\n            :class=\"\r\n              element.fixed ? 'fa fa-anchor' : 'glyphicon glyphicon-pushpin'\r\n            \"\r\n            @click=\"element.fixed = !element.fixed\"\r\n            aria-hidden=\"true\"\r\n          >{{index}},{{element.order}}</i>\r\n\r\n        </div>\r\n      </transition-group>\r\n    </draggable>  \r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport draggable from \"vuedraggable\";\r\n//import 'bootstrap/dist/css/bootstrap.css';\r\n//import 'bootstrap-vue/dist/bootstrap-vue.css';\r\n\r\nexport default {\r\n  name: \"hand-area\",\r\n  display: \"hand-area\",\r\n  order: 6,\r\n  components: {\r\n    draggable,\r\n  },\r\n  data() {\r\n    //const message = [];\r\n\r\n    //for(let i = 0;i < 50;++i){\r\n    //  message.push(toString(i + 1));\r\n    //}\r\n    \r\n    //const rowofcard = 5;\r\n    //const mapped_list = message.map((name, index) => {\r\n    //  return { name, order: index + 1 };\r\n    //});\r\n\r\n    const mapped_list = [];\r\n\r\n    return {\r\n      card_list: mapped_list,\r\n      drag: false,\r\n      title_from: \"Temp Card Area\",\r\n      modalData: null,\r\n      back_img: require('../PM_Back.jpg'),\r\n\r\n      // upload\r\n      upload_deck: null,\r\n      upload_main: [],\r\n      upload_ex: [],\r\n      deckErrMsg: '',\r\n    };\r\n  },\r\n  methods: {\r\n    openModal(data) {\r\n      console.log(\"jizz:\" + data);\r\n      this.modalData = data;\r\n    },\r\n    addToHand(id) {\r\n      console.log(\"id: \" + id);\r\n      console.log(\"element: \" + this.card_list[id].order);\r\n\r\n      // remove it from list\r\n      this.card_list.splice(id,1);\r\n      \r\n      this.$bus.$emit(\"get-card\")\r\n    },\r\n    updateAddTo(card_data) {\r\n      console.log(\"updateAddTo\" + this.title_from);\r\n      switch(this.title_from) {\r\n        case \"Deck\":\r\n          this.$bus.$emit(\"add-to-deck\",card_data.newIndex,this.card_list[card_data.newIndex]);\r\n          break;\r\n        case \"Discard\":\r\n          this.$bus.$emit(\"add-to-discard\",card_data.newIndex,this.card_list[card_data.newIndex]);\r\n          break;\r\n        case \"Ex-Deck\":\r\n          this.$bus.$emit(\"add-to-ex-deck\",card_data.newIndex,this.card_list[card_data.newIndex]);\r\n          break;\r\n        case \"Excluded\":\r\n          this.$bus.$emit(\"add-to-excluded\",card_data.newIndex,this.card_list[card_data.newIndex]);\r\n          break;\r\n      }\r\n    },\r\n    updateRemoveTo(card_data) {\r\n      switch(this.title_from) {\r\n        case \"Deck\":\r\n          this.$bus.$emit(\"remove-to-deck\",card_data.oldIndex);\r\n          break;\r\n        case \"Discard\":\r\n          this.$bus.$emit(\"remove-to-discard\",card_data.oldIndex);\r\n          break;\r\n        case \"Ex-Deck\":\r\n          this.$bus.$emit(\"remove-to-ex-deck\",card_data.oldIndex);\r\n          break;\r\n        case \"Excluded\":\r\n          this.$bus.$emit(\"remove-to-excluded\",card_data.oldIndex);\r\n          break;\r\n      }\r\n    },\r\n\r\n    // initial upload \r\n    readDeck() {\r\n      const files = document.getElementById('selected').files;\r\n      if (files.length <= 0) {\r\n        return false;\r\n      }\r\n\r\n      const fr = new FileReader();\r\n\r\n      fr.onload = e => {\r\n        const result = JSON.parse(e.target.result);\r\n        //formatted = JSON.stringify(result, null, 2);\r\n\r\n        //console.log(result.main);\r\n        this.upload_main = result.main;\r\n        this.upload_ex = result.ex;\r\n        console.log(this.upload_main);\r\n        console.log(this.upload_ex);\r\n        console.log(this.upload_main.length);\r\n      }\r\n      fr.readAsText(files.item(0));\r\n\r\n      console.log(this.upload_deck);\r\n      console.log(\"jizzzzz\");\r\n    },\r\n    shuffle(arr) {\r\n      for(let i = arr.length - 1;i > 0;--i){\r\n        let j = Math.floor(Math.random() * (i + 1));\r\n        [arr[i],arr[j]] = [arr[j],arr[i]];\r\n      }\r\n    },\r\n    ok(bvModalEvt) {\r\n      bvModalEvt.preventDefault();\r\n\r\n      this.readDeck();\r\n\r\n      // if deck is valid\r\n\r\n      setTimeout(() => {\r\n        if(!this.validDeck()){\r\n          console.log(\"not valid!\");\r\n          console.log(this.deckErrMsg);\r\n\r\n          var err_box = document.getElementById(\"error_notify\");\r\n          err_box.classList.add(\"deck_error_notify\");\r\n          return;\r\n        }\r\n\r\n        // emit to deck ,ex-card ,hand to load deck\r\n        // first unfold upload_main into upload_deck\r\n        // then split 7 cards from upload_deck to upload_hand\r\n        // after reorder each card, we can emit finally\r\n\r\n        // handle with main deck\r\n\r\n        let upload_deck = [];\r\n        let upload_hand = [];\r\n        let upload_exdeck = [];\r\n        let order_cnt = 0;\r\n\r\n        for(let i = 0;i < this.upload_main.length;++i){\r\n          for(let j = 0;j < this.upload_main[i].cnt;++j){\r\n            let card = JSON.parse(JSON.stringigy(this.upload_main[i]));\r\n            card.order = order_cnt;\r\n            upload_deck.push(card);\r\n            order_cnt++;\r\n            console.log(card);\r\n          }\r\n        }\r\n\r\n        this.shuffle(upload_deck);\r\n\r\n        for(let i = 0;i < 7;++i){\r\n          let random = Math.floor(Math.random() * upload_deck.length);\r\n          upload_hand.push(upload_deck[random]);\r\n          console.log(upload_deck[random]);\r\n          upload_deck.splice(random,1);\r\n        }\r\n\r\n        // handle with ex deck\r\n\r\n        for(let i = 0;i < this.upload_ex.length;++i){\r\n          for(let j = 0;j < this.upload_ex[i].cnt;++j){\r\n            let card = this.upload_ex[i];\r\n            card.order = order_cnt;\r\n            upload_exdeck.push(card);\r\n            order_cnt++;\r\n          }\r\n        }\r\n\r\n\r\n        this.$bus.$emit(\"load-to-deck\",upload_deck);\r\n        this.$bus.$emit(\"load-to-hand\",upload_hand);\r\n        this.$bus.$emit(\"load-to-ex\",upload_exdeck);\r\n\r\n        console.log(\"upload_deck\");\r\n        console.log(upload_deck);\r\n        console.log(upload_hand);\r\n        console.log(order_cnt);\r\n\r\n        this.$nextTick(() => {\r\n          this.$bvModal.hide('deck-upload');\r\n        });\r\n      },50);\r\n    },\r\n    validDeck() {\r\n      let valid = true;\r\n      this.deckErrMsg = '';\r\n      this.readDeck();\r\n\r\n      setTimeout(() => {\r\n        if(this.upload_main.length < 60){\r\n          this.deckErrMsg = 'You need 60 cards in your main deck\\n';\r\n          valid = false;\r\n        } else if(this.upload_main.length > 60){\r\n          this.deckErrMsg = 'You only need 60 cards in your main deck\\n';\r\n          valid = false;\r\n        }\r\n\r\n        let card_cnt = 0;\r\n        for(let i = 0;i < this.upload_main.length;++i){\r\n          card_cnt += this.upload_main[i].cnt;\r\n        }\r\n\r\n        this.deckErrMsg += ' Your main deck: ' + card_cnt + '/60';\r\n        console.log(\"valid:\" + valid);\r\n        console.log(this.deckErrMsg);\r\n        return valid;\r\n      },50);\r\n      return true;\r\n    },\r\n  },\r\n  computed: {\r\n    dragOptions() {\r\n      return {\r\n        animation: 200,\r\n        group: \"description\",\r\n        disabled: false,\r\n        ghostClass: \"ghost\",\r\n      };\r\n    },\r\n  },\r\n  mounted() {\r\n\r\n    // be opened\r\n\r\n    this.$bus.$on(\"open-temp\",(msg,card_list) => {\r\n      this.title_from = msg;\r\n      this.card_list = card_list;\r\n      console.log(\"temp: receive!\");\r\n    });\r\n\r\n    this.$bus.$on(\"cancel-temp-drop\",(id) => {\r\n      this.card_list.splice(id,1);\r\n      console.log(\"temp: cancel \" + id);\r\n    });\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.button {\r\n  margin-top: 35px;\r\n}\r\n.flip-list-move {\r\n  transition: transform 0.5s;\r\n}\r\n.no-move {\r\n  transition: transform 0s;\r\n}\r\n.ghost {\r\n  opacity: 0.5;\r\n  background: #c8ebfb;\r\n}\r\n.card-list {\r\n  min-height: 20px;\r\n  max-width: 100%;\r\n}\r\n.item {\r\n  cursor: move;\r\n  float: left;\r\n  //width: 50%;\r\n  //height: 300px;\r\n  //background-image: url(\"../PM_Back.jpg\");\r\n  //background-size: 100%;\r\n  //background-repeat: no-repeat;\r\n  //background-position: center;\r\n  padding: 0;\r\n}\r\n.item i {\r\n  cursor: pointer;\r\n}\r\n.item img {\r\n  vertical-align: top;\r\n  max-width: 100%;\r\n  //opacity: 0;\r\n}\r\n.deck-img-tb {\r\n  width:100%;\r\n}\r\n#pick {\r\n  margin-bottom: 5px;\r\n}\r\n.deck_error_notify {\r\n  border: 1px #FF2D2D solid;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/board/components"}]}