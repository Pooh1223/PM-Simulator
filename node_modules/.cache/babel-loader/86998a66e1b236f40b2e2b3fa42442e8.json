{"remainingRequest":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\babel-loader\\lib\\index.js!D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Program\\Code\\Web\\Project\\precious_memories1\\src\\components\\HandArea.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\src\\components\\HandArea.vue","mtime":1628058682638},{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["HandArea.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container\">\n    \n    <draggable\n      class=\"card-list\"\n      tag=\"div\"\n      v-model=\"card_list\"\n      v-bind=\"dragOptions\"\n      @start=\"drag = true\"\n      @end=\"drop\"\n      :move=\"dropArea\"\n    >\n      <transition-group\n        id=\"hands\"\n        class=\"row\"\n        type=\"transition\"\n        :name=\"!drag ? 'flip-list' : null\"\n      >\n        \n        <div\n          class=\"item col\"\n          v-for=\"(element, index) in card_list\"\n          :key=\"'ha-' + index\"\n          :class = \"index % 5 == 0 ? 'item col-2 offset-1' : 'item col-2' \"\n        >\n          <img src=\"../PM_Back.jpg\" />\n          <i\n            @click=\"element.fixed = !element.fixed\"\n            aria-hidden=\"true\"\n          >{{index}} , {{element.order}}</i>\n\n        </div>\n      </transition-group>\n    </draggable>  \n    \n  </div>\n</template>\n\n<script>\nimport draggable from \"vuedraggable\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-vue/dist/bootstrap-vue.css';\n\nconst message = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\nvar startTime , endTime;\n\nexport default {\n  name: \"hand-area\",\n  display: \"hand-area\",\n  order: 6,\n  components: {\n    draggable,\n  },\n  data() {\n    const rowofcard = 5;\n    const mapped_list = message.map((name, index) => {\n      return { name, order: index + 1 };\n    });\n\n    return {\n      row_of_card: rowofcard,\n      card_list: mapped_list,\n      drag: false,\n      text: \"I am popover <b>component</b> content!\",\n      modalData: null,\n      lastPlace: null,\n      lastPlaceId: 0,\n      timer: setTimeout(() => {\n              this.lastPlace = null;\n              console.log(\"kill last place\");\n            },50),\n    };\n  },\n  methods: {\n    openModal(data) {\n      console.log(\"jizz:\" + data);\n      this.modalData = data;\n    },\n    dropArea(place){\n      console.log(\"move\");\n      console.log(place);\n\n      clearTimeout(this.timer);\n\n      this.lastPlace = place.to.getAttribute(\"id\");\n      \n      this.timer = setTimeout(() => {\n        this.lastPlace = null;\n        console.log(\"kill last place\");\n      },50);\n\n      startTime = new Date();\n\n      if(place.to.getAttribute(\"id\") == \"decks\"){\n\n        this.lastPlaceId = place.draggedContext.index;\n        this.dragCard = place.draggedContext.element;\n        return false;\n\n      } else if(place.to.getAttribute(\"id\") == \"discards\"){\n\n        this.lastPlaceId = place.draggedContext.index;\n        this.dragCard = place.draggedContext.element;\n        return false;\n\n      } else if(place.to.getAttribute(\"id\") == \"ex-decks\"){\n\n        this.lastPlaceId = place.draggedContext.index;\n        this.dragCard = place.draggedContext.element;\n        return false;\n\n      } else if(place.to.getAttribute(\"id\") == \"excludeds\"){\n\n        this.lastPlaceId = place.draggedContext.index;\n        this.dragCard = place.draggedContext.element;\n        return false;\n\n      } else if(place.to.getAttribute(\"id\") == \"hands\"){\n\n        this.lastPlaceId = place.draggedContext.index;\n        this.dragCard = place.draggedContext.element;\n        return true;\n\n      } else if(place.to.getAttribute(\"id\") == \"mains\"){\n\n        this.lastPlaceId = place.draggedContext.index;\n        this.dragCard = place.draggedContext.element;\n        return true;\n      } else if(place.to.getAttribute(\"id\") == \"supports\") {\n\n        this.lastPlaceId = place.draggedContext.index;\n        this.dragCard = place.draggedContext.element;\n        return true;\n      } else if(place.to.getAttribute(\"id\") == \"points\"){\n\n        this.lastPlaceId = place.draggedContext.index;\n        this.dragCard = place.draggedContext.element;\n        return true;\n      } else {\n        return true;\n      }\n    },\n    drop(data) {\n      this.drag = false;\n      let dropCard = this.dragCard;\n      let place = this.lastPlace;\n      endTime = new Date();\n\n      console.log(\"Time elapse: \" + Math.round(endTime - startTime));\n\n      // ms for re-set properDrop \n      let disable_first_drop = 70;\n\n      // check whether the card is at the same area\n      // but its ghost changed the position before it drop\n\n      //console.log(this.card_list[data.newDraggableIndex] === dropCard);\n      //if(data.to === data.from && this.card_list[data.newDraggableIndex] === dropCard){\n      //  // implies that the dragged card only changes its position in the original area\n      //  this.lastPlaceId = data.newDraggableIndex;\n      //  console.log(\"in change id\");\n      //}\n\n      if(place == \"decks\") {\n\n        if(this.card_list[this.lastPlaceId] != this.dragCard || typeof this.card_list[this.lastPlaceId] == \"undefined\"){\n\n          disable_first_drop = 0;\n\n          // ghost probably lie in somewhere else\n\n          switch(data.to.getAttribute(\"id\")){\n            case \"hands\":\n              if(data.to === data.from && this.card_list[data.newDraggableIndex] === dropCard){\n                // implies that the dragged card only changes its position in the original area\n                \n                this.lastPlaceId = data.newDraggableIndex;\n                this.$bus.$emit(\"add-to-deck-again\",dropCard,data.to.getAttribute(\"area-name\"));\n                this.card_list.splice(this.lastPlaceId,1);\n                console.log(\"in change id\");\n              }\n              break;\n            case \"mains\":\n              this.$bus.$emit(\"cancel-main-drop\",data.newDraggableIndex);\n              this.$bus.$emit(\"add-to-deck-again\",this.dragCard,data.to.getAttribute(\"area-name\"));\n              break;\n            case \"supports\":\n              this.$bus.$emit(\"cancel-support-drop\",data.newDraggableIndex);\n              this.$bus.$emit(\"add-to-deck-again\",this.dragCard,data.to.getAttribute(\"area-name\"));\n              break;\n            case \"points\":\n              this.$bus.$emit(\"cancel-point-drop\",data.newDraggableIndex);\n              this.$bus.$emit(\"add-to-deck-again\",this.dragCard,data.to.getAttribute(\"area-name\"));\n              break;\n            case \"temp-area\":\n              // special case: it will affect deck-stack area too\n              //this.$bus.$emit(\"cancel-temp-drop\",data.newDraggableIndex);\n\n              // args_1: where, args_2: index\n              this.$bus.$emit(\"cancel-stack-drop\",data.to.getAttribute(\"area-name\"),data.newDraggableIndex);\n\n              // case when temp area is the same with stack\n              // since we use openTemp to refresh the list\n              // need to check whether the area-name is same with lastPlace\n\n              this.$bus.$emit(\"add-to-deck-again\",this.dragCard,data.to.getAttribute(\"area-name\"));\n\n              break;\n          }\n\n          console.log(\"hand to deck error\");\n        }\n\n        this.$bus.$emit(\"hand-to-deck\",dropCard,disable_first_drop);\n        console.log(\"emit dropCard to deck\");\n\n      } else if(place == \"discards\"){\n\n        if(this.card_list[this.lastPlaceId] != this.dragCard || typeof this.card_list[this.lastPlaceId] == \"undefined\"){\n\n          disable_first_drop = 0;\n\n          // ghost probably lie in somewhere else\n\n          switch(data.to.getAttribute(\"id\")){\n            case \"hands\":\n              //this.$bus.$emit(\"cancel-hand-drop\",data.newDraggableIndex);\n\n              // since you change the ghost position before drop to stack\n              // it might cause error since the lastPlaceId is no longer the same\n\n              if(data.to === data.from && this.card_list[data.newDraggableIndex] === dropCard){\n                // implies that the dragged card only changes its position in the original area\n                \n                this.lastPlaceId = data.newDraggableIndex;\n                this.$bus.$emit(\"add-to-discard-again\",dropCard,data.to.getAttribute(\"area-name\"));\n                this.card_list.splice(this.lastPlaceId,1);\n                console.log(\"in change id\");\n              }\n\n              break;\n            case \"mains\":\n              this.$bus.$emit(\"cancel-main-drop\",data.newDraggableIndex);\n              this.$bus.$emit(\"add-to-discard-again\",dropCard,data.to.getAttribute(\"area-name\"));\n              break;\n            case \"supports\":\n              this.$bus.$emit(\"cancel-support-drop\",data.newDraggableIndex);\n              this.$bus.$emit(\"add-to-discard-again\",dropCard,data.to.getAttribute(\"area-name\"));\n              break;\n            case \"points\":\n              this.$bus.$emit(\"cancel-point-drop\",data.newDraggableIndex);\n              this.$bus.$emit(\"add-to-discard-again\",dropCard,data.to.getAttribute(\"area-name\"));\n              break;\n            case \"temp-area\":\n              // special case: it will affect deck-stack area too\n              //this.$bus.$emit(\"cancel-temp-drop\",data.newDraggableIndex);\n\n              // args_1: where, args_2: index\n              this.$bus.$emit(\"cancel-stack-drop\",data.to.getAttribute(\"area-name\"),data.newDraggableIndex);\n\n              // case when temp area is the same with stack\n              // since we use openTemp to refresh the list\n              // need to check whether the area-name is same with lastPlace\n\n              this.$bus.$emit(\"add-to-discard-again\",this.dragCard,data.to.getAttribute(\"area-name\"));\n\n              break;\n          }\n\n          console.log(\"hand to discard error\");\n        }\n\n        this.$bus.$emit(\"hand-to-discard\",dropCard,disable_first_drop);\n        console.log(\"emit dropCard to discard\");\n\n      } else if(place == \"ex-decks\") {\n\n        if(this.card_list[this.lastPlaceId] != this.dragCard || typeof this.card_list[this.lastPlaceId] == \"undefined\"){\n\n          disable_first_drop = 0;\n\n          // ghost probably lie in somewhere else\n\n          switch(data.to.getAttribute(\"id\")){\n            case \"hands\":\n              if(data.to === data.from && this.card_list[data.newDraggableIndex] === dropCard){\n                // implies that the dragged card only changes its position in the original area\n                \n                this.lastPlaceId = data.newDraggableIndex;\n                this.$bus.$emit(\"add-to-ex-deck-again\",dropCard,data.to.getAttribute(\"area-name\"));\n                this.card_list.splice(this.lastPlaceId,1);\n                console.log(\"in change id\");\n              }\n              break;\n            case \"mains\":\n              this.$bus.$emit(\"cancel-main-drop\",data.newDraggableIndex);\n              this.$bus.$emit(\"add-to-ex-deck-again\",dropCard,data.to.getAttribute(\"area-name\"));\n              break;\n            case \"supports\":\n              this.$bus.$emit(\"cancel-support-drop\",data.newDraggableIndex);\n              this.$bus.$emit(\"add-to-ex-deck-again\",dropCard,data.to.getAttribute(\"area-name\"));\n              break;\n            case \"points\":\n              this.$bus.$emit(\"cancel-point-drop\",data.newDraggableIndex);\n              this.$bus.$emit(\"add-to-ex-deck-again\",dropCard,data.to.getAttribute(\"area-name\"));\n              break;\n            case \"temp-area\":\n              // special case: it will affect deck-stack area too\n              //this.$bus.$emit(\"cancel-temp-drop\",data.newDraggableIndex);\n\n              // args_1: where, args_2: index\n              this.$bus.$emit(\"cancel-stack-drop\",data.to.getAttribute(\"area-name\"),data.newDraggableIndex);\n\n              // case when temp area is the same with stack\n              // since we use openTemp to refresh the list\n              // need to check whether the area-name is same with lastPlace\n\n              this.$bus.$emit(\"add-to-ex-deck-again\",this.dragCard,data.to.getAttribute(\"area-name\"));\n\n              break;\n          }\n\n          console.log(\"hand to ex-deck error\");\n        }\n\n        this.$bus.$emit(\"hand-to-ex-deck\",dropCard,disable_first_drop);\n        console.log(\"emit dropCard to discard\");\n\n      } else if(place == \"excludeds\") {\n\n        if(this.card_list[this.lastPlaceId] != this.dragCard || typeof this.card_list[this.lastPlaceId] == \"undefined\"){\n\n          disable_first_drop = 0;\n\n          // ghost probably lie in somewhere else\n\n          switch(data.to.getAttribute(\"id\")){\n            case \"hands\":\n              if(data.to === data.from && this.card_list[data.newDraggableIndex] === dropCard){\n                // implies that the dragged card only changes its position in the original area\n                \n                this.lastPlaceId = data.newDraggableIndex;\n                this.$bus.$emit(\"add-to-excluded-again\",dropCard,data.to.getAttribute(\"area-name\"));\n                this.card_list.splice(this.lastPlaceId,1);\n                console.log(\"in change id\");\n              }\n              break;\n            case \"mains\":\n              this.$bus.$emit(\"cancel-main-drop\",data.newDraggableIndex);\n              this.$bus.$emit(\"add-to-excluded-again\",dropCard,data.to.getAttribute(\"area-name\"));\n              break;\n            case \"supports\":\n              this.$bus.$emit(\"cancel-support-drop\",data.newDraggableIndex);\n              this.$bus.$emit(\"add-to-excluded-again\",dropCard,data.to.getAttribute(\"area-name\"));\n              break;\n            case \"points\":\n              this.$bus.$emit(\"cancel-point-drop\",data.newDraggableIndex);\n              this.$bus.$emit(\"add-to-excluded-again\",dropCard,data.to.getAttribute(\"area-name\"));\n              break;\n            case \"temp-area\":\n              // special case: it will affect deck-stack area too\n              //this.$bus.$emit(\"cancel-temp-drop\",data.newDraggableIndex);\n\n              // args_1: where, args_2: index\n              this.$bus.$emit(\"cancel-stack-drop\",data.to.getAttribute(\"area-name\"),data.newDraggableIndex);\n\n              // case when temp area is the same with stack\n              // since we use openTemp to refresh the list\n              // need to check whether the area-name is same with lastPlace\n\n              this.$bus.$emit(\"add-to-excluded-again\",this.dragCard,data.to.getAttribute(\"area-name\"));\n\n              break;\n          }\n\n          console.log(\"hand to excluded error\");\n        }\n\n        this.$bus.$emit(\"hand-to-excluded\",dropCard,disable_first_drop);\n      }\n\n      console.log(\"test\");\n      console.log(place);\n      console.log(this.lastPlace);\n      console.log(data);\n      console.log(data.to);\n      console.log(data.to.getAttribute(\"area-name\"));\n      console.log(data.from);\n    },\n  },\n  computed: {\n    dragOptions() {\n      return {\n        animation: 200,\n        group: \"description\",\n        disabled: false,\n        ghostClass: \"ghost\",\n      };\n    },\n  },\n  mounted() {\n    this.$bus.$on(\"draw-from-deck\",(drawn_card_list) => {\n      this.card_list = this.card_list.concat(drawn_card_list);\n    });\n\n    this.$bus.$on(\"check-top-to-hand\",(card) => {\n      this.card_list.push(card);\n    });\n\n    this.$bus.$on(\"check-bottom-to-hand\",(card) => {\n      this.card_list.push(card);\n    });\n\n    this.$bus.$on(\"able-to-remove\",(where) => {\n      if(where == \"hand\"){\n        console.log(\"lastPlaceId: \" + this.lastPlaceId);\n        this.card_list.splice(this.lastPlaceId,1);\n      }\n    });\n\n    this.$bus.$on(\"cancel-hand-drop\",(id) => {\n      this.card_list.splice(id,1);\n      console.log(\"cancel hand drop: \" + id);\n    });\n  }\n};\n</script>\n\n<style>\n.button {\n  margin-top: 35px;\n}\n.flip-list-move {\n  transition: transform 0.5s;\n}\n.no-move {\n  transition: transform 0s;\n}\n.ghost {\n  opacity: 1;\n  background: #c8ebfb;\n}\n.sortable-chosen {\n  opacity: 1;\n}\n.card-list {\n  min-height: 20px;\n  max-width: 100%;\n}\n.item {\n  cursor: move;\n  float: left;\n  //width: 50%;\n  //height: 300px;\n  background-image: url(\"../PM_Back.jpg\");\n  background-size: 100%;\n  background-repeat: no-repeat;\n  //background-position: center;\n  padding: 0;\n}\n.item i {\n  cursor: pointer;\n}\n.item img {\n  vertical-align: top;\n  max-width: 100%;\n  opacity: 0;\n}\n\n</style>\n"],"sourceRoot":"src/components"}]}