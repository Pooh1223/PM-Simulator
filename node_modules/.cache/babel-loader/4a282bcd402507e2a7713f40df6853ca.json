{"remainingRequest":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\babel-loader\\lib\\index.js!D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Program\\Code\\Web\\Project\\precious_memories1\\src\\board\\components\\MainArea.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\src\\board\\components\\MainArea.vue","mtime":1630833745054},{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1625907638133},{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\babel-loader\\lib\\index.js","mtime":1625907637969},{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1625907638133},{"path":"D:\\Program\\Code\\Web\\Project\\precious_memories1\\node_modules\\vue-loader\\lib\\index.js","mtime":1625907660845}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MainArea.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0MA,OAAA,SAAA,MAAA,cAAA,C,CACA;AACA;;AACA,OAAA,kCAAA;AACA,OAAA,sCAAA,C,CAEA;;AACA,IAAA,KAAA,GAAA,EAAA;AACA,IAAA,SAAA,GAAA,EAAA;AACA,IAAA,WAAA,GAAA,EAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,OAAA,EAAA,WAFA;AAGA,EAAA,KAAA,EAAA,CAHA;AAIA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA,CAEA;AACA;;AAHA,GAJA;AASA,EAAA,IATA,kBASA;AAAA;;AAEA,QAAA,MAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAEA,QAAA,MAAA,GAAA,MAAA,CAAA,GAAA,CAAA,UAAA,MAAA,EAAA,KAAA,EAAA;AACA,aAAA;AAAA,QAAA,MAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA,KAAA,GAAA,CAAA;AAAA,QAAA,MAAA,EAAA,CAAA;AAAA,QAAA,QAAA,EAAA,CAAA;AAAA,QAAA,IAAA,EAAA,CAAA;AAAA,QAAA,IAAA,EAAA,CAAA;AAAA,QAAA,OAAA,EAAA,EAAA;AAAA,QAAA,GAAA,EAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA,KAFA,CAAA;AAGA,IAAA,OAAA,CAAA,GAAA,CAAA,MAAA;AAEA,QAAA,aAAA,GAAA,GAAA;;AAEA,SAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,aAAA,EAAA,EAAA,CAAA,EAAA;AACA,MAAA,KAAA,CAAA,IAAA,CAAA,KAAA;AACA,MAAA,SAAA,CAAA,IAAA,CAAA,KAAA;AACA,MAAA,WAAA,CAAA,IAAA,CAAA,MAAA;AACA;;AAEA,WAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,SAAA,EAAA,EAFA;AAGA,MAAA,SAAA,EAAA,WAHA;AAIA,MAAA,WAAA,EAAA,SAJA;AAKA,MAAA,UAAA,EAAA,EALA;AAOA,MAAA,SAAA,EAAA,MAAA,CAAA,CAAA,CAPA;AAQA,MAAA,UAAA,EAAA,KARA;AASA,MAAA,eAAA,EAAA,IATA;AAUA,MAAA,SAAA,EAAA,IAVA;AAWA,MAAA,WAAA,EAAA,CAXA;AAYA,MAAA,KAAA,EAAA,UAAA,CAAA,YAAA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,IAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,iBAAA;AACA,OAHA,CAZA;AAiBA,MAAA,iBAAA,EAAA,CAAA;AAjBA,KAAA;AAmBA,GA7CA;AA8CA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,qBACA,IADA,EACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,UAAA,IAAA;AACA,WAAA,SAAA,GAAA,IAAA;AACA,KAJA;AAMA;AAEA,IAAA,YARA,wBAQA,EARA,EAQA;AACA;AACA;AACA,WAAA,UAAA,GAAA,KAAA,UAAA,CAAA,GAAA,CAAA,UAAA,EAAA,EAAA,CAAA;AAAA,eACA,CAAA,KAAA,EAAA,GAAA,CAAA,EAAA,GAAA,EADA;AAAA,OAAA,CAAA;AAGA,WAAA,eAAA,GAAA,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,iBAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,SAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,UAAA;AACA,KAlBA;AAmBA,IAAA,gBAnBA,4BAmBA,EAnBA,EAmBA;AAEA,WAAA,WAAA,GAAA,KAAA,WAAA,CAAA,GAAA,CAAA,UAAA,EAAA,EAAA,CAAA;AAAA,eACA,CAAA,KAAA,EAAA,GAAA,CAAA,EAAA,GAAA,EADA;AAAA,OAAA,CAAA;;AAIA,UAAA,KAAA,SAAA,CAAA,EAAA,KAAA,MAAA,EAAA;AACA,aAAA,SAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,EAAA,OAAA;AACA,OAFA,MAEA;AACA,aAAA,SAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,EAAA,MAAA;AACA;;AAEA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,WAAA;AACA,KAhCA;AAkCA;AAEA,IAAA,UApCA,sBAoCA,IApCA,EAoCA;AACA,aAAA,CAAA,IAAA,CAAA;AACA,KAtCA;AAuCA,IAAA,SAvCA,qBAuCA,EAvCA,EAuCA;AACA,aAAA,EAAA,IAAA,CAAA;AACA,KAzCA;AA0CA,IAAA,YA1CA,wBA0CA,EA1CA,EA0CA;AACA,aAAA,EAAA,IAAA,CAAA,IAAA,EAAA,IAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA;AACA,KA5CA;AA6CA;AAEA;AACA;AACA;AACA;AACA;AAEA,IAAA,aArDA,yBAqDA,KArDA,EAqDA,GArDA,EAqDA;AAEA,cAAA,GAAA;AACA,aAAA,MAAA;AACA;AACA,cAAA,KAAA,CAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,IAAA,IAAA,EAAA;AACA;AACA;AACA;;AAEA,eAAA,SAAA,CAAA,MAAA,IAAA,CAAA;AACA,eAAA,SAAA,CAAA,MAAA,CAAA,IAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA;;AAEA,cAAA,KAAA,SAAA,CAAA,MAAA,IAAA,CAAA,EAAA;AACA,gBAAA,EAAA,GAAA,KAAA,UAAA,CAAA,OAAA,CAAA,KAAA,CAAA;;AACA,gBAAA,EAAA,GAAA,CAAA,CAAA,EAAA;AACA,mBAAA,UAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA;AACA;;AACA,iBAAA,SAAA,CAAA,MAAA,CAAA,IAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,IAAA,CAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA;AACA,WANA,MAMA;AACA,gBAAA,KAAA,UAAA,CAAA,QAAA,CAAA,KAAA,KAAA,KAAA,EAAA;AACA,mBAAA,UAAA,CAAA,IAAA,CAAA,KAAA;AACA;AACA;;AACA;;AACA,aAAA,QAAA;AACA;AACA,cAAA,KAAA,CAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,IAAA,IAAA,EAAA;AACA;AACA;AACA;;AAEA,eAAA,SAAA,CAAA,QAAA,IAAA,CAAA;AACA,eAAA,SAAA,CAAA,MAAA,CAAA,MAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,MAAA,CAAA,GAAA,CAAA;;AAEA,cAAA,KAAA,SAAA,CAAA,QAAA,IAAA,CAAA,EAAA;AACA,gBAAA,GAAA,GAAA,KAAA,UAAA,CAAA,OAAA,CAAA,KAAA,CAAA;;AACA,gBAAA,GAAA,GAAA,CAAA,CAAA,EAAA;AACA,mBAAA,UAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA;AACA;;AACA,iBAAA,SAAA,CAAA,MAAA,CAAA,MAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,MAAA,CAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,QAAA,CAAA;AACA,WANA,MAMA;AACA,gBAAA,KAAA,UAAA,CAAA,QAAA,CAAA,KAAA,KAAA,KAAA,EAAA;AACA,mBAAA,UAAA,CAAA,IAAA,CAAA,KAAA;AACA;AACA;;AACA;;AACA,aAAA,IAAA;AACA;AACA,cAAA,KAAA,CAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,EAAA,CAAA,CAAA,IAAA,IAAA,EAAA;AACA;AACA;AACA;;AAEA,eAAA,SAAA,CAAA,IAAA,IAAA,EAAA;AACA,eAAA,SAAA,CAAA,MAAA,CAAA,EAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,EAAA,CAAA,GAAA,EAAA;;AAEA,cAAA,KAAA,SAAA,CAAA,IAAA,IAAA,CAAA,EAAA;AACA,gBAAA,IAAA,GAAA,KAAA,UAAA,CAAA,OAAA,CAAA,KAAA,CAAA;;AACA,gBAAA,IAAA,GAAA,CAAA,CAAA,EAAA;AACA,mBAAA,UAAA,CAAA,MAAA,CAAA,IAAA,EAAA,CAAA;AACA;;AACA,iBAAA,SAAA,CAAA,MAAA,CAAA,EAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,EAAA,CAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,IAAA,CAAA;AACA,WANA,MAMA;AACA,gBAAA,KAAA,UAAA,CAAA,QAAA,CAAA,KAAA,KAAA,KAAA,EAAA;AACA,mBAAA,UAAA,CAAA,IAAA,CAAA,KAAA;AACA;AACA;;AACA;;AACA,aAAA,IAAA;AACA;AACA,cAAA,KAAA,CAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,EAAA,CAAA,CAAA,IAAA,IAAA,EAAA;AACA;AACA;AACA;;AAEA,eAAA,SAAA,CAAA,IAAA,IAAA,EAAA;AACA,eAAA,SAAA,CAAA,MAAA,CAAA,EAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,EAAA,CAAA,GAAA,EAAA;;AAEA,cAAA,KAAA,SAAA,CAAA,IAAA,IAAA,CAAA,EAAA;AACA,gBAAA,IAAA,GAAA,KAAA,UAAA,CAAA,OAAA,CAAA,KAAA,CAAA;;AACA,gBAAA,IAAA,GAAA,CAAA,CAAA,EAAA;AACA,mBAAA,UAAA,CAAA,MAAA,CAAA,IAAA,EAAA,CAAA;AACA;;AACA,iBAAA,SAAA,CAAA,MAAA,CAAA,EAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,EAAA,CAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,IAAA,CAAA;AACA,WANA,MAMA;AACA,gBAAA,KAAA,UAAA,CAAA,QAAA,CAAA,KAAA,KAAA,KAAA,EAAA;AACA,mBAAA,UAAA,CAAA,IAAA,CAAA,KAAA;AACA;AACA;;AACA;;AACA,aAAA,MAAA;AACA,eAAA,SAAA,CAAA,IAAA,IAAA,CAAA;AAEA;AA5FA;AA8FA,KArJA;AAsJA,IAAA,eAtJA,2BAsJA,KAtJA,EAsJA,GAtJA,EAsJA;AACA,cAAA,GAAA;AACA,aAAA,MAAA;AACA;AACA,cAAA,KAAA,CAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,IAAA,IAAA,EAAA;AACA;AACA;AACA;;AAEA,eAAA,SAAA,CAAA,MAAA,IAAA,CAAA;AACA,eAAA,SAAA,CAAA,MAAA,CAAA,IAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA;;AAEA,cAAA,KAAA,SAAA,CAAA,MAAA,IAAA,CAAA,EAAA;AACA,gBAAA,EAAA,GAAA,KAAA,UAAA,CAAA,OAAA,CAAA,KAAA,CAAA;;AACA,gBAAA,EAAA,GAAA,CAAA,CAAA,EAAA;AACA,mBAAA,UAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA;AACA;;AACA,iBAAA,SAAA,CAAA,MAAA,CAAA,IAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,IAAA,CAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA;AACA,WANA,MAMA;AACA,gBAAA,KAAA,UAAA,CAAA,QAAA,CAAA,KAAA,KAAA,KAAA,EAAA;AACA,mBAAA,UAAA,CAAA,IAAA,CAAA,KAAA;AACA;AACA;;AACA;;AACA,aAAA,QAAA;AACA;AACA,cAAA,KAAA,CAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,IAAA,IAAA,EAAA;AACA;AACA;AACA;;AAEA,eAAA,SAAA,CAAA,QAAA,IAAA,CAAA;AACA,eAAA,SAAA,CAAA,MAAA,CAAA,MAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,MAAA,CAAA,GAAA,CAAA;;AAEA,cAAA,KAAA,SAAA,CAAA,QAAA,IAAA,CAAA,EAAA;AACA,gBAAA,IAAA,GAAA,KAAA,UAAA,CAAA,OAAA,CAAA,KAAA,CAAA;;AACA,gBAAA,IAAA,GAAA,CAAA,CAAA,EAAA;AACA,mBAAA,UAAA,CAAA,MAAA,CAAA,IAAA,EAAA,CAAA;AACA;;AACA,iBAAA,SAAA,CAAA,MAAA,CAAA,MAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,MAAA,CAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,QAAA,CAAA;AACA,WANA,MAMA;AACA,gBAAA,KAAA,UAAA,CAAA,QAAA,CAAA,KAAA,KAAA,KAAA,EAAA;AACA,mBAAA,UAAA,CAAA,IAAA,CAAA,KAAA;AACA;AACA;;AACA;;AACA,aAAA,IAAA;AACA;AACA,cAAA,KAAA,CAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,EAAA,CAAA,CAAA,IAAA,IAAA,EAAA;AACA;AACA;AACA;;AAEA,eAAA,SAAA,CAAA,IAAA,IAAA,EAAA;AACA,eAAA,SAAA,CAAA,MAAA,CAAA,EAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,EAAA,CAAA,GAAA,EAAA;;AAEA,cAAA,KAAA,SAAA,CAAA,IAAA,IAAA,CAAA,EAAA;AACA,gBAAA,IAAA,GAAA,KAAA,UAAA,CAAA,OAAA,CAAA,KAAA,CAAA;;AACA,gBAAA,IAAA,GAAA,CAAA,CAAA,EAAA;AACA,mBAAA,UAAA,CAAA,MAAA,CAAA,IAAA,EAAA,CAAA;AACA;;AACA,iBAAA,SAAA,CAAA,MAAA,CAAA,EAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,EAAA,CAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,IAAA,CAAA;AACA,WANA,MAMA;AACA,gBAAA,KAAA,UAAA,CAAA,QAAA,CAAA,KAAA,KAAA,KAAA,EAAA;AACA,mBAAA,UAAA,CAAA,IAAA,CAAA,KAAA;AACA;AACA;;AACA;;AACA,aAAA,IAAA;AACA;AACA,cAAA,KAAA,CAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,EAAA,CAAA,CAAA,IAAA,IAAA,EAAA;AACA;AACA;AACA;;AAEA,eAAA,SAAA,CAAA,IAAA,IAAA,EAAA;AACA,eAAA,SAAA,CAAA,MAAA,CAAA,EAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,EAAA,CAAA,GAAA,EAAA;;AAEA,cAAA,KAAA,SAAA,CAAA,IAAA,IAAA,CAAA,EAAA;AACA,gBAAA,IAAA,GAAA,KAAA,UAAA,CAAA,OAAA,CAAA,KAAA,CAAA;;AACA,gBAAA,IAAA,GAAA,CAAA,CAAA,EAAA;AACA,mBAAA,UAAA,CAAA,MAAA,CAAA,IAAA,EAAA,CAAA;AACA;;AACA,iBAAA,SAAA,CAAA,MAAA,CAAA,EAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,EAAA,CAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,IAAA,CAAA;AACA,WANA,MAMA;AACA,gBAAA,KAAA,UAAA,CAAA,QAAA,CAAA,KAAA,KAAA,KAAA,EAAA;AACA,mBAAA,UAAA,CAAA,IAAA,CAAA,KAAA;AACA;AACA;;AACA;;AACA,aAAA,MAAA;AACA,cAAA,KAAA,SAAA,CAAA,IAAA,GAAA,CAAA,EAAA;AACA,iBAAA,SAAA,CAAA,IAAA,IAAA,CAAA;AACA;;AAEA;AA9FA;AAgGA,KAvPA;AAwPA,IAAA,eAxPA,2BAwPA,KAxPA,EAwPA,GAxPA,EAwPA;AAEA,UAAA,EAAA,GAAA,KAAA,UAAA,CAAA,OAAA,CAAA,KAAA,CAAA;;AACA,UAAA,EAAA,GAAA,CAAA,CAAA,EAAA;AACA,aAAA,UAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA;AACA;;AAEA,cAAA,GAAA;AACA,aAAA,MAAA;AACA;AACA,cAAA,KAAA,CAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,IAAA,IAAA,EAAA;AACA;AACA;AACA;;AAEA,eAAA,SAAA,CAAA,MAAA,CAAA,IAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,IAAA,CAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA;AACA,eAAA,SAAA,CAAA,MAAA,GAAA,CAAA;AAEA;;AACA,aAAA,QAAA;AACA;AACA,cAAA,KAAA,CAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,IAAA,IAAA,EAAA;AACA;AACA;AACA;;AAEA,eAAA,SAAA,CAAA,MAAA,CAAA,MAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,MAAA,CAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,QAAA,CAAA;AACA,eAAA,SAAA,CAAA,QAAA,GAAA,CAAA;AAEA;;AACA,aAAA,IAAA;AACA;AACA,cAAA,KAAA,CAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,EAAA,CAAA,CAAA,IAAA,IAAA,EAAA;AACA;AACA;AACA;;AAEA,eAAA,SAAA,CAAA,MAAA,CAAA,EAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,EAAA,CAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,IAAA,CAAA;AACA,eAAA,SAAA,CAAA,IAAA,GAAA,CAAA;AAEA;;AACA,aAAA,IAAA;AACA;AACA,cAAA,KAAA,CAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,EAAA,CAAA,CAAA,IAAA,IAAA,EAAA;AACA;AACA;AACA;;AAEA,eAAA,SAAA,CAAA,MAAA,CAAA,EAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,EAAA,CAAA,GAAA,QAAA,CAAA,KAAA,SAAA,CAAA,IAAA,CAAA;AACA,eAAA,SAAA,CAAA,IAAA,GAAA,CAAA;AAEA;;AACA,aAAA,MAAA;AACA,eAAA,SAAA,CAAA,IAAA,GAAA,CAAA;AACA;AA/CA;;AAkDA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,UAAA;AACA,KAlTA;AAoTA;AAEA,IAAA,QAtTA,oBAsTA,KAtTA,EAsTA;AAAA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,MAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AAEA,MAAA,YAAA,CAAA,KAAA,KAAA,CAAA;AAEA,WAAA,SAAA,GAAA,KAAA,CAAA,EAAA,CAAA,YAAA,CAAA,IAAA,CAAA;AAEA,WAAA,KAAA,GAAA,UAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,SAAA,GAAA,IAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,iBAAA;AACA,OAHA,EAGA,EAHA,CAAA;;AAKA,UAAA,KAAA,CAAA,EAAA,CAAA,YAAA,CAAA,IAAA,KAAA,OAAA,EAAA;AAEA,aAAA,WAAA,GAAA,KAAA,CAAA,cAAA,CAAA,KAAA;AACA,aAAA,QAAA,GAAA,KAAA,CAAA,cAAA,CAAA,OAAA;AACA,eAAA,KAAA;AAEA,OANA,MAMA,IAAA,KAAA,CAAA,EAAA,CAAA,YAAA,CAAA,IAAA,KAAA,UAAA,EAAA;AAEA,aAAA,WAAA,GAAA,KAAA,CAAA,cAAA,CAAA,KAAA;AACA,aAAA,QAAA,GAAA,KAAA,CAAA,cAAA,CAAA,OAAA;AACA,eAAA,KAAA;AAEA,OANA,MAMA,IAAA,KAAA,CAAA,EAAA,CAAA,YAAA,CAAA,IAAA,KAAA,UAAA,EAAA;AAEA,aAAA,WAAA,GAAA,KAAA,CAAA,cAAA,CAAA,KAAA;AACA,aAAA,QAAA,GAAA,KAAA,CAAA,cAAA,CAAA,OAAA;AACA,eAAA,KAAA;AAEA,OANA,MAMA,IAAA,KAAA,CAAA,EAAA,CAAA,YAAA,CAAA,IAAA,KAAA,WAAA,EAAA;AAEA,aAAA,WAAA,GAAA,KAAA,CAAA,cAAA,CAAA,KAAA;AACA,aAAA,QAAA,GAAA,KAAA,CAAA,cAAA,CAAA,OAAA;AACA,eAAA,KAAA;AAEA,OANA,MAMA,IAAA,KAAA,CAAA,EAAA,CAAA,YAAA,CAAA,IAAA,KAAA,OAAA,EAAA;AAEA,aAAA,WAAA,GAAA,KAAA,CAAA,cAAA,CAAA,KAAA;AACA,aAAA,QAAA,GAAA,KAAA,CAAA,cAAA,CAAA,OAAA;AACA,eAAA,IAAA;AAEA,OANA,MAMA,IAAA,KAAA,CAAA,EAAA,CAAA,YAAA,CAAA,IAAA,KAAA,OAAA,EAAA;AAEA,aAAA,WAAA,GAAA,KAAA,CAAA,cAAA,CAAA,KAAA;AACA,aAAA,QAAA,GAAA,KAAA,CAAA,cAAA,CAAA,OAAA;AACA,eAAA,IAAA;AACA,OALA,MAKA,IAAA,KAAA,CAAA,EAAA,CAAA,YAAA,CAAA,IAAA,KAAA,UAAA,EAAA;AAEA,aAAA,WAAA,GAAA,KAAA,CAAA,cAAA,CAAA,KAAA;AACA,aAAA,QAAA,GAAA,KAAA,CAAA,cAAA,CAAA,OAAA;AACA,eAAA,IAAA;AACA,OALA,MAKA,IAAA,KAAA,CAAA,EAAA,CAAA,YAAA,CAAA,IAAA,KAAA,QAAA,EAAA;AAEA,aAAA,WAAA,GAAA,KAAA,CAAA,cAAA,CAAA,KAAA;AACA,aAAA,QAAA,GAAA,KAAA,CAAA,cAAA,CAAA,OAAA;AACA,eAAA,IAAA;AACA,OALA,MAKA;AACA,eAAA,IAAA;AACA;AAGA,KArXA;AAsXA,IAAA,IAtXA,gBAsXA,IAtXA,EAsXA;AACA,WAAA,IAAA,GAAA,KAAA;AACA,UAAA,QAAA,GAAA,KAAA,QAAA;AACA,UAAA,KAAA,GAAA,KAAA,SAAA,CAHA,CAKA;;AACA,UAAA,kBAAA,GAAA,EAAA,CANA,CAQA;AACA;;AAEA,UAAA,KAAA,IAAA,OAAA,EAAA;AAEA,YAAA,KAAA,SAAA,CAAA,KAAA,WAAA,KAAA,KAAA,QAAA,IAAA,OAAA,KAAA,SAAA,CAAA,KAAA,WAAA,CAAA,IAAA,WAAA,EAAA;AAEA,UAAA,kBAAA,GAAA,CAAA,CAFA,CAIA;;AAEA,kBAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,IAAA,CAAA;AACA,iBAAA,OAAA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,kBAAA,EAAA,IAAA,CAAA,iBAAA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,mBAAA,EAAA,KAAA,QAAA,EAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,WAAA,CAAA;AACA;;AACA,iBAAA,OAAA;AACA;AACA;AAEA,kBAAA,IAAA,CAAA,EAAA,KAAA,IAAA,CAAA,IAAA,IAAA,KAAA,SAAA,CAAA,IAAA,CAAA,iBAAA,MAAA,QAAA,EAAA;AACA;AAEA,qBAAA,WAAA,GAAA,IAAA,CAAA,iBAAA;AACA,qBAAA,IAAA,CAAA,KAAA,CAAA,mBAAA,EAAA,QAAA;AACA,qBAAA,SAAA,CAAA,MAAA,CAAA,KAAA,WAAA,EAAA,CAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,cAAA;AACA;;AACA;;AACA,iBAAA,UAAA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,qBAAA,EAAA,IAAA,CAAA,iBAAA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,WAAA,CAAA;AACA;;AACA,iBAAA,QAAA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,mBAAA,EAAA,IAAA,CAAA,iBAAA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,WAAA,CAAA;AACA;;AACA,iBAAA,WAAA;AACA;AACA;AAEA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,mBAAA,EAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,WAAA,CAAA,EAAA,IAAA,CAAA,iBAAA,EALA,CAOA;AACA;AACA;;AAEA,mBAAA,IAAA,CAAA,KAAA,CAAA,mBAAA,EAAA,KAAA,QAAA,EAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,WAAA,CAAA;AAEA;AAvCA;;AA0CA,UAAA,OAAA,CAAA,GAAA,CAAA,oBAAA;AACA;;AAEA,aAAA,IAAA,CAAA,KAAA,CAAA,cAAA,EAAA,QAAA,EAAA,kBAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,uBAAA;AAEA,OAxDA,MAwDA,IAAA,KAAA,IAAA,UAAA,EAAA;AAEA,YAAA,KAAA,SAAA,CAAA,KAAA,WAAA,KAAA,KAAA,QAAA,IAAA,OAAA,KAAA,SAAA,CAAA,KAAA,WAAA,CAAA,IAAA,WAAA,EAAA;AAEA,UAAA,kBAAA,GAAA,CAAA,CAFA,CAIA;;AAEA,kBAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,IAAA,CAAA;AACA,iBAAA,OAAA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,kBAAA,EAAA,IAAA,CAAA,iBAAA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,WAAA,CAAA;AACA;;AACA,iBAAA,OAAA;AACA;AACA;AAEA;AACA;AAEA,kBAAA,IAAA,CAAA,EAAA,KAAA,IAAA,CAAA,IAAA,IAAA,KAAA,SAAA,CAAA,IAAA,CAAA,iBAAA,MAAA,QAAA,EAAA;AACA;AAEA,qBAAA,WAAA,GAAA,IAAA,CAAA,iBAAA;AACA,qBAAA,IAAA,CAAA,KAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,WAAA,CAAA;AACA,qBAAA,SAAA,CAAA,MAAA,CAAA,KAAA,WAAA,EAAA,CAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,cAAA;AACA;;AACA;;AACA,iBAAA,UAAA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,qBAAA,EAAA,IAAA,CAAA,iBAAA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,WAAA,CAAA;AAEA;;AACA,iBAAA,QAAA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,mBAAA,EAAA,IAAA,CAAA,iBAAA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,WAAA,CAAA;AACA;;AACA,iBAAA,WAAA;AACA;AACA;AAEA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,mBAAA,EAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,WAAA,CAAA,EAAA,IAAA,CAAA,iBAAA,EALA,CAOA;AACA;AACA;;AAEA,mBAAA,IAAA,CAAA,KAAA,CAAA,sBAAA,EAAA,KAAA,QAAA,EAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,WAAA,CAAA;AAEA;AA3CA;;AA8CA,UAAA,OAAA,CAAA,GAAA,CAAA,uBAAA;AACA;;AAEA,aAAA,IAAA,CAAA,KAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,kBAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,0BAAA;AAEA,OA5DA,MA4DA,IAAA,KAAA,IAAA,UAAA,EAAA;AAEA,YAAA,KAAA,SAAA,CAAA,KAAA,WAAA,KAAA,KAAA,QAAA,IAAA,OAAA,KAAA,SAAA,CAAA,KAAA,WAAA,CAAA,IAAA,WAAA,EAAA;AAEA,UAAA,kBAAA,GAAA,CAAA,CAFA,CAIA;;AAEA,kBAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,IAAA,CAAA;AACA,iBAAA,OAAA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,kBAAA,EAAA,IAAA,CAAA,iBAAA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,WAAA,CAAA;AACA;;AACA,iBAAA,OAAA;AACA;AACA;AAEA,kBAAA,IAAA,CAAA,EAAA,KAAA,IAAA,CAAA,IAAA,IAAA,KAAA,SAAA,CAAA,IAAA,CAAA,iBAAA,MAAA,QAAA,EAAA;AACA;AAEA,qBAAA,WAAA,GAAA,IAAA,CAAA,iBAAA;AACA,qBAAA,IAAA,CAAA,KAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,WAAA,CAAA;AACA,qBAAA,SAAA,CAAA,MAAA,CAAA,KAAA,WAAA,EAAA,CAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,cAAA;AACA;;AACA;;AACA,iBAAA,UAAA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,qBAAA,EAAA,IAAA,CAAA,iBAAA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,WAAA,CAAA;AAEA;;AACA,iBAAA,QAAA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,mBAAA,EAAA,IAAA,CAAA,iBAAA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,WAAA,CAAA;AACA;;AACA,iBAAA,WAAA;AACA;AACA;AAEA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,mBAAA,EAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,WAAA,CAAA,EAAA,IAAA,CAAA,iBAAA,EALA,CAOA;AACA;AACA;;AAEA,mBAAA,IAAA,CAAA,KAAA,CAAA,sBAAA,EAAA,KAAA,QAAA,EAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,WAAA,CAAA;AAEA;AAxCA;;AA2CA,UAAA,OAAA,CAAA,GAAA,CAAA,uBAAA;AACA;;AAEA,aAAA,IAAA,CAAA,KAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,kBAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,0BAAA;AAEA,OAzDA,MAyDA,IAAA,KAAA,IAAA,WAAA,EAAA;AAEA,YAAA,KAAA,SAAA,CAAA,KAAA,WAAA,KAAA,KAAA,QAAA,IAAA,OAAA,KAAA,SAAA,CAAA,KAAA,WAAA,CAAA,IAAA,WAAA,EAAA;AAEA,UAAA,kBAAA,GAAA,CAAA,CAFA,CAIA;;AAEA,kBAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,IAAA,CAAA;AACA,iBAAA,OAAA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,kBAAA,EAAA,IAAA,CAAA,iBAAA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,uBAAA,EAAA,QAAA,EAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,WAAA,CAAA;AACA;;AACA,iBAAA,OAAA;AACA;AACA;AAEA,kBAAA,IAAA,CAAA,EAAA,KAAA,IAAA,CAAA,IAAA,IAAA,KAAA,SAAA,CAAA,IAAA,CAAA,iBAAA,MAAA,QAAA,EAAA;AACA;AAEA,qBAAA,WAAA,GAAA,IAAA,CAAA,iBAAA;AACA,qBAAA,IAAA,CAAA,KAAA,CAAA,uBAAA,EAAA,QAAA,EAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,WAAA,CAAA;AACA,qBAAA,SAAA,CAAA,MAAA,CAAA,KAAA,WAAA,EAAA,CAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,cAAA;AACA;;AACA;;AACA,iBAAA,UAAA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,qBAAA,EAAA,IAAA,CAAA,iBAAA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,uBAAA,EAAA,QAAA,EAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,WAAA,CAAA;AACA;;AACA,iBAAA,QAAA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,mBAAA,EAAA,IAAA,CAAA,iBAAA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,uBAAA,EAAA,QAAA,EAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,WAAA,CAAA;AACA;;AACA,iBAAA,WAAA;AACA;AACA;AAEA;AACA,mBAAA,IAAA,CAAA,KAAA,CAAA,mBAAA,EAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,WAAA,CAAA,EAAA,IAAA,CAAA,iBAAA,EALA,CAOA;AACA;AACA;;AAEA,mBAAA,IAAA,CAAA,KAAA,CAAA,uBAAA,EAAA,KAAA,QAAA,EAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,WAAA,CAAA;AAEA;AAvCA;;AA0CA,UAAA,OAAA,CAAA,GAAA,CAAA,wBAAA;AACA;;AAEA,aAAA,IAAA,CAAA,KAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,kBAAA;AACA;;AAEA,MAAA,OAAA,CAAA,GAAA,CAAA,MAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,SAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,WAAA,CAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,KA7mBA;AA+mBA;AACA,IAAA,UAhnBA,sBAgnBA,IAhnBA,EAgnBA;AACA,WAAA,iBAAA,GAAA,KAAA,SAAA,CAAA,IAAA,CAAA,QAAA,EAAA,KAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,aAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,iBAAA;AACA,KApnBA;AAqnBA;AACA,IAAA,UAtnBA,wBAsnBA;AACA,WAAA,SAAA,CAAA,KAAA,iBAAA,IAAA,MAAA;AACA,WAAA,WAAA,CAAA,KAAA,iBAAA,IAAA,KAAA;AACA,WAAA,UAAA,CAAA,KAAA,iBAAA,IAAA,KAAA;AACA;AA1nBA,GA9CA;AA0qBA,EAAA,QAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,aAAA;AACA,QAAA,SAAA,EAAA,GADA;AAEA,QAAA,KAAA,EAAA,aAFA;AAGA,QAAA,QAAA,EAAA,KAHA;AAIA,QAAA,UAAA,EAAA;AAJA,OAAA;AAMA;AARA,GA1qBA;AAorBA,EAAA,OAprBA,qBAorBA;AAAA;;AACA,SAAA,IAAA,CAAA,GAAA,CAAA,gBAAA,EAAA,UAAA,KAAA,EAAA;AACA,UAAA,KAAA,IAAA,MAAA,EAAA;AACA,QAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,MAAA,CAAA,WAAA,EAAA,CAAA;AACA;AACA,KAJA;AAMA,SAAA,IAAA,CAAA,GAAA,CAAA,kBAAA,EAAA,UAAA,EAAA,EAAA;AACA,MAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,uBAAA,EAAA;AACA,KAHA;AAIA;AA/rBA,CAAA","sourcesContent":["<template>\r\n  <div class=\"container-fluid\">\r\n\r\n    <b-modal \r\n      id=\"main-detail\"\r\n      scrollable\r\n      title=\"Card-Detail\"\r\n      :data=\"modalData\">\r\n      <div class=\"card-container\">\r\n        <img :src=\"modalData === null ? '../PM_Back.jpg' : modalData.detail.img_url\" />\r\n        <div class=\"card-attr\">\r\n          <!--<b-table striped hover :items=\"modalData === null ? [] : addInArray(modalData.detail)\"></b-table>-->\r\n\r\n          <table class=\"table table-striped\">\r\n            <tbody>\r\n              <tr\r\n                v-for=\"(attr, index) in Object.entries(modalData.detail)\"\r\n                :key=\"attr.card_number\"\r\n                >\r\n                <th v-if=\"showTable(index)\">{{attr[0]}}</th>\r\n                <td \r\n                  :class=\"textChange.includes(index) ? 'text-danger' : 'text-dark'\"\r\n                  v-if=\"showTable(index)\"\r\n                  >\r\n                  {{attr[1]}}\r\n                </td>\r\n                <td>\r\n                  <b-button\r\n                    class=\"btn-line\"\r\n                    variant=\"outline-danger\"\r\n                    v-if=\"showTable(index) && showTableBtn(index)\"\r\n                    @click=\"addTableValue(index,attr[0])\"\r\n                    >\r\n                    +\r\n                  </b-button>\r\n                </td>\r\n                <td>\r\n                  <b-button\r\n                    class=\"btn-line\"\r\n                    variant=\"outline-danger\"\r\n                    v-if=\"showTable(index) && showTableBtn(index)\"\r\n                    @click=\"minusTableValue(index,attr[0])\"\r\n                    >\r\n                    -\r\n                  </b-button>\r\n                </td>\r\n                <td>\r\n                  <b-button\r\n                    class=\"btn-line\"\r\n                    variant=\"outline-danger\"\r\n                    v-if=\"showTable(index) && showTableBtn(index)\"\r\n                    @click=\"resetTableValue(index,attr[0])\"\r\n                    >\r\n                    Reset\r\n                  </b-button>\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <th>Coin</th>\r\n                <td>{{modalData.coin}}</td>\r\n                <td>\r\n                  <b-button\r\n                    class=\"btn-line\"\r\n                    variant=\"outline-danger\"\r\n                    @click=\"addTableValue(15,'Coin')\"\r\n                    >\r\n                    +\r\n                  </b-button>\r\n                </td>\r\n                <td>\r\n                  <b-button\r\n                    class=\"btn-line\"\r\n                    variant=\"outline-danger\"\r\n                    @click=\"minusTableValue(15,'Coin')\"\r\n                    >\r\n                    -\r\n                  </b-button>\r\n                </td>\r\n                <td>\r\n                  <b-button\r\n                    class=\"btn-line\"\r\n                    variant=\"outline-danger\"\r\n                    @click=\"resetTableValue(15,'Coin')\"\r\n                    >\r\n                    Reset\r\n                  </b-button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </b-modal>\r\n\r\n    <draggable\r\n      class=\"card-list\"\r\n      tag=\"div\"\r\n      v-model=\"card_list\"\r\n      v-bind=\"dragOptions\"\r\n      :emptyInsertThreshold=\"150\"\r\n      @start=\"drag = true\"\r\n      @end=\"drop\"\r\n      @choose=\"updateLast\"\r\n      @remove=\"clearState\"\r\n      :move=\"dropArea\"\r\n    >\r\n      <transition-group\r\n        id=\"mains\"\r\n        class=\"row\"\r\n        type=\"transition\"\r\n        :name=\"!drag ? 'flip-list' : null\"\r\n      >\r\n        \r\n        <div\r\n          v-for=\"(element, index) in card_list\"\r\n          :key=\"'ma-' + index\"\r\n          :class = \"index % 5 == 0 ? 'main-item col-2 offset-1' : 'main-item col-2' \"\r\n          v-b-modal.main-detail\r\n          @click=\"openModal(element)\"\r\n        >\r\n          <!--<img :src=\"require('../' + card_bgimg[element.order - 1])\" />-->\r\n\r\n          <img \r\n            :src=\"element.detail.img_url\"\r\n            :class=\"card_direct[element.order] == false ? '' : 'col-2 rotate'\"\r\n            style=\"width: 100%\"\r\n            />\r\n          <i\r\n            :class=\"\r\n              element.fixed ? 'fa fa-anchor' : 'glyphicon glyphicon-pushpin'\r\n            \"\r\n            @click=\"element.fixed = !element.fixed\"\r\n            aria-hidden=\"true\"\r\n          >{{index}} , {{element.order}}</i>\r\n\r\n          <draggable\r\n            class=\"overlap-card-list\"\r\n            tag=\"div\"\r\n            v-model=\"modalData.overlap\"\r\n            v-bind=\"dragOptions\"\r\n            :emptyInsertThreshold=\"150\"\r\n            @start=\"drag = true\"\r\n            @end=\"drag = false\"\r\n            v-if=\"showDialog[element.order]\"\r\n          >\r\n            <transition-group\r\n              class=\"row\"\r\n              type=\"transition\"\r\n              :name=\"!drag ? 'flip-list' : null\"\r\n              style=\"margin:auto;\"\r\n            >\r\n              <template v-if=\"modalData.overlap.length > 0\">\r\n                <div\r\n                  class=\"main-item col-md-6\" \r\n                  v-for=\"element in modalData.overlap\"\r\n                  :key=\"element.order\"\r\n                  v-b-modal.main-detail\r\n                  @click=\"openModal(element)\"\r\n                >\r\n                  <img \r\n                    :src=\"element.detail.img_url\"\r\n                    :class=\"card_direct[element.order] == false ? '' : 'col-2 rotate'\"\r\n                    style=\"width: 100%\"\r\n                    />\r\n                  <i\r\n                    :class=\"\r\n                      element.fixed ? 'fa fa-anchor' : 'glyphicon glyphicon-pushpin'\r\n                    \"\r\n                    @click=\"element.fixed = !element.fixed\"\r\n                    aria-hidden=\"true\"\r\n                  ></i>\r\n                </div>\r\n              </template>\r\n              <template v-else>\r\n                <font key=\"not-a-card\" size=\"3\"> Drop your card here </font>\r\n              </template>\r\n            </transition-group>\r\n          </draggable>\r\n\r\n          <div class=\"text-center\">\r\n            <b-button\r\n              id=\"overlap\"\r\n              variant=\"outline-primary\"\r\n              @click.stop=\"toggleDialog(element.order)\">\r\n              Overlap\r\n            </b-button>\r\n            <b-button\r\n              id=\"rest\"\r\n              variant=\"outline-primary\"\r\n              @click.stop=\"toggleRotateCard(element.order)\">\r\n              {{card_rest[element.order]}}\r\n            </b-button>\r\n          </div>\r\n        </div>\r\n      </transition-group>\r\n    </draggable>  \r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport draggable from \"vuedraggable\";\r\n//import DialogDrag from 'vue-dialog-drag';\r\n//import DropArea from 'vue-dialog-drag/dist/drop-area';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap-vue/dist/bootstrap-vue.css';\r\n\r\n//const message = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\r\nconst showd = [];\r\nconst img_state = [];\r\nconst cards_state = [];\r\n\r\nexport default {\r\n  name: \"main-area\",\r\n  display: \"main-area\",\r\n  order: 6,\r\n  components: {\r\n    draggable,\r\n    //DialogDrag,\r\n    //DropArea,\r\n  },\r\n  data() {\r\n\r\n    const mydata = require(\"../data.json\");\r\n\r\n    const tester = mydata.map((detail, index) => {\r\n      return {detail, order: index + 1, excost: 0, exsource: 0, exap: 0, exdp: 0, overlap: [], cnt: 0, coin: 0};\r\n    });\r\n    console.log(tester);\r\n\r\n    let all_cards_num = 100;\r\n\r\n    for(let i = 0;i < all_cards_num;++i){\r\n      showd.push(false);\r\n      img_state.push(false);\r\n      cards_state.push(\"Rest\");\r\n    }\r\n\r\n    return {\r\n      drag: false,\r\n      card_list: [],\r\n      card_rest: cards_state,\r\n      card_direct: img_state,\r\n      textChange: [],\r\n\r\n      modalData: tester[0],\r\n      showDialog: showd,\r\n      from_which_card: null,\r\n      lastPlace: null,\r\n      lastPlaceId: 0,\r\n      timer: setTimeout(() => {\r\n              this.lastPlace = null;\r\n              console.log(\"kill last place\");\r\n            }),\r\n\r\n      last_chosen_order: -1,\r\n    };\r\n  },\r\n  methods: {\r\n    openModal(data) {\r\n      console.log(\"jizz:\" + data);\r\n      this.modalData = data;\r\n    },\r\n\r\n    // dialog \r\n\r\n    toggleDialog (id) {\r\n      //this.showDialog[id] = !this.showDialog[id];\r\n      // vue can't detect an element changed or not in an array\r\n      this.showDialog = this.showDialog.map((el,i) => \r\n        i === id ? !el : el\r\n      );\r\n      this.from_which_card = id;\r\n      console.log(\"it should open!\");\r\n      console.log(this.card_list);\r\n      console.log(this.showDialog);\r\n    },\r\n    toggleRotateCard(id) {\r\n     \r\n      this.card_direct = this.card_direct.map((el,i) => \r\n        i === id ? !el : el\r\n      );\r\n\r\n      if(this.card_rest[id] == \"Rest\"){\r\n        this.card_rest.splice(id,1,\"Stand\");\r\n      } else {\r\n        this.card_rest.splice(id,1,\"Rest\");\r\n      }\r\n\r\n      console.log(this.card_direct);\r\n    },\r\n\r\n    // modal table\r\n\r\n    addInArray(data) {\r\n      return [data];\r\n    },\r\n    showTable(id) {\r\n      return (id != 0);\r\n    },\r\n    showTableBtn(id) {\r\n      return (id == 6 || id == 7 || id == 10 || id == 11);\r\n    },\r\n    // modify table value\r\n\r\n    // 6 is the index of cost property in detail\r\n    // 7 is the index of source property in detail\r\n    // 10 is the index of AP property in detail\r\n    // 11 is the index of DP property in detail\r\n    // 15 is the index of coin property\r\n\r\n    addTableValue(index, col) {\r\n\r\n      switch(col){\r\n        case \"cost\":\r\n          // check if not a number\r\n          if(isNaN(parseInt(this.modalData.detail.cost)) == true){\r\n            // not a number!\r\n            return;\r\n          }\r\n\r\n          this.modalData.excost += 1;\r\n          this.modalData.detail.cost = parseInt(this.modalData.detail.cost) + 1;\r\n          \r\n          if(this.modalData.excost == 0){\r\n            let id = this.textChange.indexOf(index);\r\n            if(id > -1){\r\n              this.textChange.splice(id,1);\r\n            }\r\n            this.modalData.detail.cost = parseInt(this.modalData.detail.cost) - parseInt(this.modalData.excost);\r\n          } else {\r\n            if(this.textChange.includes(index) == false){\r\n              this.textChange.push(index);\r\n            }\r\n          }\r\n          break;\r\n        case \"source\":\r\n          // check if not a number\r\n          if(isNaN(parseInt(this.modalData.detail.source)) == true){\r\n            // not a number!\r\n            return;\r\n          }\r\n\r\n          this.modalData.exsource += 1;\r\n          this.modalData.detail.source = parseInt(this.modalData.detail.source) + 1;\r\n          \r\n          if(this.modalData.exsource == 0){\r\n            let id = this.textChange.indexOf(index);\r\n            if(id > -1){\r\n              this.textChange.splice(id,1);\r\n            }\r\n            this.modalData.detail.source = parseInt(this.modalData.detail.source) - parseInt(this.modalData.exsource);\r\n          } else {\r\n            if(this.textChange.includes(index) == false){\r\n              this.textChange.push(index);\r\n            }\r\n          }\r\n          break;\r\n        case \"AP\":\r\n          // check if not a number\r\n          if(isNaN(parseInt(this.modalData.detail.AP)) == true){\r\n            // not a number!\r\n            return;\r\n          }\r\n\r\n          this.modalData.exap += 10;\r\n          this.modalData.detail.AP = parseInt(this.modalData.detail.AP) + 10;\r\n          \r\n          if(this.modalData.exap == 0){\r\n            let id = this.textChange.indexOf(index);\r\n            if(id > -1){\r\n              this.textChange.splice(id,1);\r\n            }\r\n            this.modalData.detail.AP = parseInt(this.modalData.detail.AP) - parseInt(this.modalData.exap);\r\n          } else {\r\n            if(this.textChange.includes(index) == false){\r\n              this.textChange.push(index);\r\n            }\r\n          }\r\n          break;\r\n        case \"DP\":\r\n          // check if not a number\r\n          if(isNaN(parseInt(this.modalData.detail.DP)) == true){\r\n            // not a number!\r\n            return;\r\n          }\r\n\r\n          this.modalData.exdp += 10;\r\n          this.modalData.detail.DP = parseInt(this.modalData.detail.DP) + 10;\r\n          \r\n          if(this.modalData.exdp == 0){\r\n            let id = this.textChange.indexOf(index);\r\n            if(id > -1){\r\n              this.textChange.splice(id,1);\r\n            }\r\n            this.modalData.detail.DP = parseInt(this.modalData.detail.DP) - parseInt(this.modalData.exdp);\r\n          } else {\r\n            if(this.textChange.includes(index) == false){\r\n              this.textChange.push(index);\r\n            }\r\n          }\r\n          break;\r\n        case \"Coin\": \r\n          this.modalData.coin += 1;\r\n          \r\n          break;\r\n      }\r\n    },\r\n    minusTableValue(index, col) {\r\n      switch(col){\r\n        case \"cost\":\r\n          // check if not a number\r\n          if(isNaN(parseInt(this.modalData.detail.cost)) == true){\r\n            // not a number!\r\n            return;\r\n          }\r\n\r\n          this.modalData.excost -= 1;\r\n          this.modalData.detail.cost = parseInt(this.modalData.detail.cost) - 1;\r\n          \r\n          if(this.modalData.excost == 0){\r\n            let id = this.textChange.indexOf(index);\r\n            if(id > -1){\r\n              this.textChange.splice(id,1);\r\n            }\r\n            this.modalData.detail.cost = parseInt(this.modalData.detail.cost) - parseInt(this.modalData.excost);\r\n          } else {\r\n            if(this.textChange.includes(index) == false){\r\n              this.textChange.push(index);\r\n            }\r\n          }\r\n          break;\r\n        case \"source\":\r\n          // check if not a number\r\n          if(isNaN(parseInt(this.modalData.detail.source)) == true){\r\n            // not a number!\r\n            return;\r\n          }\r\n\r\n          this.modalData.exsource -= 1;\r\n          this.modalData.detail.source = parseInt(this.modalData.detail.source) - 1;\r\n          \r\n          if(this.modalData.exsource == 0){\r\n            let id = this.textChange.indexOf(index);\r\n            if(id > -1){\r\n              this.textChange.splice(id,1);\r\n            }\r\n            this.modalData.detail.source = parseInt(this.modalData.detail.source) - parseInt(this.modalData.exsource);\r\n          } else {\r\n            if(this.textChange.includes(index) == false){\r\n              this.textChange.push(index);\r\n            }\r\n          }\r\n          break;\r\n        case \"AP\":\r\n          // check if not a number\r\n          if(isNaN(parseInt(this.modalData.detail.AP)) == true){\r\n            // not a number!\r\n            return;\r\n          }\r\n\r\n          this.modalData.exap -= 10;\r\n          this.modalData.detail.AP = parseInt(this.modalData.detail.AP) - 10;\r\n          \r\n          if(this.modalData.exap == 0){\r\n            let id = this.textChange.indexOf(index);\r\n            if(id > -1){\r\n              this.textChange.splice(id,1);\r\n            }\r\n            this.modalData.detail.AP = parseInt(this.modalData.detail.AP) - parseInt(this.modalData.exap);\r\n          } else {\r\n            if(this.textChange.includes(index) == false){\r\n              this.textChange.push(index);\r\n            }\r\n          }\r\n          break;\r\n        case \"DP\":\r\n          // check if not a number\r\n          if(isNaN(parseInt(this.modalData.detail.DP)) == true){\r\n            // not a number!\r\n            return;\r\n          }\r\n\r\n          this.modalData.exdp -= 10;\r\n          this.modalData.detail.DP = parseInt(this.modalData.detail.DP) - 10;\r\n          \r\n          if(this.modalData.exdp == 0){\r\n            let id = this.textChange.indexOf(index);\r\n            if(id > -1){\r\n              this.textChange.splice(id,1);\r\n            }\r\n            this.modalData.detail.DP = parseInt(this.modalData.detail.DP) - parseInt(this.modalData.exdp);\r\n          } else {\r\n            if(this.textChange.includes(index) == false){\r\n              this.textChange.push(index);\r\n            }\r\n          }\r\n          break;\r\n        case \"Coin\": \r\n          if(this.modalData.coin > 0){\r\n            this.modalData.coin -= 1;\r\n          }\r\n          \r\n          break;\r\n      }\r\n    },\r\n    resetTableValue(index, col) {\r\n\r\n      let id = this.textChange.indexOf(index);\r\n      if(id > -1){\r\n        this.textChange.splice(id,1);\r\n      }\r\n\r\n      switch(col){\r\n        case \"cost\":\r\n          // check if not a number\r\n          if(isNaN(parseInt(this.modalData.detail.cost)) == true){\r\n            // not a number!\r\n            return;\r\n          }\r\n\r\n          this.modalData.detail.cost = parseInt(this.modalData.detail.cost) - parseInt(this.modalData.excost);\r\n          this.modalData.excost = 0;\r\n          \r\n          break;\r\n        case \"source\":\r\n          // check if not a number\r\n          if(isNaN(parseInt(this.modalData.detail.source)) == true){\r\n            // not a number!\r\n            return;\r\n          }\r\n\r\n          this.modalData.detail.source = parseInt(this.modalData.detail.source) - parseInt(this.modalData.exsource);\r\n          this.modalData.exsource = 0;\r\n          \r\n          break;\r\n        case \"AP\":\r\n          // check if not a number\r\n          if(isNaN(parseInt(this.modalData.detail.AP)) == true){\r\n            // not a number!\r\n            return;\r\n          }\r\n\r\n          this.modalData.detail.AP = parseInt(this.modalData.detail.AP) - parseInt(this.modalData.exap);\r\n          this.modalData.exap = 0;\r\n          \r\n          break;\r\n        case \"DP\":\r\n          // check if not a number\r\n          if(isNaN(parseInt(this.modalData.detail.DP)) == true){\r\n            // not a number!\r\n            return;\r\n          }\r\n\r\n          this.modalData.detail.DP = parseInt(this.modalData.detail.DP) - parseInt(this.modalData.exdp);\r\n          this.modalData.exdp = 0;\r\n\r\n          break;\r\n        case \"Coin\":\r\n          this.modalData.coin = 0;\r\n          break;\r\n      }\r\n\r\n      console.log(this.textChange);\r\n    },\r\n\r\n    // drop\r\n\r\n    dropArea(place){\r\n      console.log(\"move\");\r\n      console.log(place);\r\n\r\n      clearTimeout(this.timer);\r\n\r\n      this.lastPlace = place.to.getAttribute(\"id\");\r\n      \r\n      this.timer = setTimeout(() => {\r\n        this.lastPlace = null;\r\n        console.log(\"kill last place\");\r\n      },50);\r\n\r\n      if(place.to.getAttribute(\"id\") == \"decks\"){\r\n\r\n        this.lastPlaceId = place.draggedContext.index;\r\n        this.dragCard = place.draggedContext.element;\r\n        return false;\r\n\r\n      } else if(place.to.getAttribute(\"id\") == \"discards\"){\r\n\r\n        this.lastPlaceId = place.draggedContext.index;\r\n        this.dragCard = place.draggedContext.element;\r\n        return false;\r\n\r\n      } else if(place.to.getAttribute(\"id\") == \"ex-decks\"){\r\n\r\n        this.lastPlaceId = place.draggedContext.index;\r\n        this.dragCard = place.draggedContext.element;\r\n        return false;\r\n\r\n      } else if(place.to.getAttribute(\"id\") == \"excludeds\"){\r\n\r\n        this.lastPlaceId = place.draggedContext.index;\r\n        this.dragCard = place.draggedContext.element;\r\n        return false;\r\n\r\n      } else if(place.to.getAttribute(\"id\") == \"hands\"){\r\n\r\n        this.lastPlaceId = place.draggedContext.index;\r\n        this.dragCard = place.draggedContext.element;\r\n        return true;\r\n\r\n      } else if(place.to.getAttribute(\"id\") == \"mains\"){\r\n\r\n        this.lastPlaceId = place.draggedContext.index;\r\n        this.dragCard = place.draggedContext.element;\r\n        return true;\r\n      } else if(place.to.getAttribute(\"id\") == \"supports\") {\r\n\r\n        this.lastPlaceId = place.draggedContext.index;\r\n        this.dragCard = place.draggedContext.element;\r\n        return true;\r\n      } else if(place.to.getAttribute(\"id\") == \"points\"){\r\n\r\n        this.lastPlaceId = place.draggedContext.index;\r\n        this.dragCard = place.draggedContext.element;\r\n        return true;\r\n      } else {\r\n        return true;\r\n      }\r\n\r\n      \r\n    },\r\n    drop(data) {\r\n      this.drag = false;\r\n      let dropCard = this.dragCard;\r\n      let place = this.lastPlace;\r\n\r\n      // ms for re-set properDrop \r\n      let disable_first_drop = 70;\r\n\r\n      // check whether the card is at the same area\r\n      // but its ghost changed the position before it drop\r\n\r\n      if(place == \"decks\") {\r\n\r\n        if(this.card_list[this.lastPlaceId] != this.dragCard || typeof this.card_list[this.lastPlaceId] == \"undefined\"){\r\n\r\n          disable_first_drop = 0;\r\n\r\n          // ghost probably lie in somewhere else\r\n\r\n          switch(data.to.getAttribute(\"id\")){\r\n            case \"hands\":\r\n              this.$bus.$emit(\"cancel-hand-drop\",data.newDraggableIndex);\r\n              this.$bus.$emit(\"add-to-deck-again\",this.dragCard,data.to.getAttribute(\"area-name\"));\r\n              break;\r\n            case \"mains\":\r\n              //this.$bus.$emit(\"cancel-main-drop\",data.newDraggableIndex);\r\n              //this.$bus.$emit(\"add-to-deck-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n\r\n              if(data.to === data.from && this.card_list[data.newDraggableIndex] === dropCard){\r\n                // implies that the dragged card only changes its position in the original area\r\n                \r\n                this.lastPlaceId = data.newDraggableIndex;\r\n                this.$bus.$emit(\"add-to-deck-again\",dropCard);\r\n                this.card_list.splice(this.lastPlaceId,1);\r\n                console.log(\"in change id\");\r\n              }\r\n              break;\r\n            case \"supports\":\r\n              this.$bus.$emit(\"cancel-support-drop\",data.newDraggableIndex);\r\n              this.$bus.$emit(\"add-to-deck-again\",dropCard,data.to.getAttribute(\"area-name\")); \r\n              break;\r\n            case \"points\":\r\n              this.$bus.$emit(\"cancel-point-drop\",data.newDraggableIndex);\r\n              this.$bus.$emit(\"add-to-deck-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n              break;\r\n            case \"temp-area\":\r\n              // special case: it will affect deck-stack area too\r\n              //this.$bus.$emit(\"cancel-temp-drop\",data.newDraggableIndex);\r\n\r\n              // args_1: where, args_2: index\r\n              this.$bus.$emit(\"cancel-stack-drop\",data.to.getAttribute(\"area-name\"),data.newDraggableIndex);\r\n\r\n              // case when temp area is the same with stack\r\n              // since we use openTemp to refresh the list\r\n              // need to check whether the area-name is same with lastPlace\r\n\r\n              this.$bus.$emit(\"add-to-deck-again\",this.dragCard,data.to.getAttribute(\"area-name\"));\r\n\r\n              break;\r\n          }\r\n\r\n          console.log(\"main to deck error\");\r\n        }\r\n\r\n        this.$bus.$emit(\"main-to-deck\",dropCard,disable_first_drop);\r\n        console.log(\"emit dropCard to deck\");\r\n\r\n      } else if(place == \"discards\"){\r\n\r\n        if(this.card_list[this.lastPlaceId] != this.dragCard || typeof this.card_list[this.lastPlaceId] == \"undefined\"){\r\n\r\n          disable_first_drop = 0;\r\n\r\n          // ghost probably lie in somewhere else\r\n\r\n          switch(data.to.getAttribute(\"id\")){\r\n            case \"hands\":\r\n              this.$bus.$emit(\"cancel-hand-drop\",data.newDraggableIndex);\r\n              this.$bus.$emit(\"add-to-discard-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n              break;\r\n            case \"mains\":\r\n              //this.$bus.$emit(\"cancel-main-drop\",data.newDraggableIndex);\r\n              //this.$bus.$emit(\"add-to-discard-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n\r\n              // since you change the ghost position before drop to stack\r\n              // it might cause error since the lastPlaceId is no longer the same\r\n\r\n              if(data.to === data.from && this.card_list[data.newDraggableIndex] === dropCard){\r\n                // implies that the dragged card only changes its position in the original area\r\n                \r\n                this.lastPlaceId = data.newDraggableIndex;\r\n                this.$bus.$emit(\"add-to-discard-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n                this.card_list.splice(this.lastPlaceId,1);\r\n                console.log(\"in change id\");\r\n              }\r\n              break;\r\n            case \"supports\":\r\n              this.$bus.$emit(\"cancel-support-drop\",data.newDraggableIndex);\r\n              this.$bus.$emit(\"add-to-discard-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n\r\n              break;\r\n            case \"points\":\r\n              this.$bus.$emit(\"cancel-point-drop\",data.newDraggableIndex);\r\n              this.$bus.$emit(\"add-to-discard-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n              break;\r\n            case \"temp-area\":\r\n              // special case: it will affect deck-stack area too\r\n              //this.$bus.$emit(\"cancel-temp-drop\",data.newDraggableIndex);\r\n\r\n              // args_1: where, args_2: index\r\n              this.$bus.$emit(\"cancel-stack-drop\",data.to.getAttribute(\"area-name\"),data.newDraggableIndex);\r\n\r\n              // case when temp area is the same with stack\r\n              // since we use openTemp to refresh the list\r\n              // need to check whether the area-name is same with lastPlace\r\n\r\n              this.$bus.$emit(\"add-to-discard-again\",this.dragCard,data.to.getAttribute(\"area-name\"));\r\n\r\n              break;\r\n          }\r\n\r\n          console.log(\"main to discard error\");\r\n        }\r\n\r\n        this.$bus.$emit(\"main-to-discard\",dropCard,disable_first_drop);\r\n        console.log(\"emit dropCard to discard\");\r\n\r\n      } else if(place == \"ex-decks\") {\r\n\r\n        if(this.card_list[this.lastPlaceId] != this.dragCard || typeof this.card_list[this.lastPlaceId] == \"undefined\"){\r\n\r\n          disable_first_drop = 0;\r\n\r\n          // ghost probably lie in somewhere else\r\n\r\n          switch(data.to.getAttribute(\"id\")){\r\n            case \"hands\":\r\n              this.$bus.$emit(\"cancel-hand-drop\",data.newDraggableIndex);\r\n              this.$bus.$emit(\"add-to-ex-deck-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n              break;\r\n            case \"mains\":\r\n              //this.$bus.$emit(\"cancel-main-drop\",data.newDraggableIndex);\r\n              //this.$bus.$emit(\"add-to-ex-deck-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n\r\n              if(data.to === data.from && this.card_list[data.newDraggableIndex] === dropCard){\r\n                // implies that the dragged card only changes its position in the original area\r\n                \r\n                this.lastPlaceId = data.newDraggableIndex;\r\n                this.$bus.$emit(\"add-to-ex-deck-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n                this.card_list.splice(this.lastPlaceId,1);\r\n                console.log(\"in change id\");\r\n              }\r\n              break;\r\n            case \"supports\":\r\n              this.$bus.$emit(\"cancel-support-drop\",data.newDraggableIndex);\r\n              this.$bus.$emit(\"add-to-ex-deck-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n              \r\n              break;\r\n            case \"points\":\r\n              this.$bus.$emit(\"cancel-point-drop\",data.newDraggableIndex);\r\n              this.$bus.$emit(\"add-to-ex-deck-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n              break;\r\n            case \"temp-area\":\r\n              // special case: it will affect deck-stack area too\r\n              //this.$bus.$emit(\"cancel-temp-drop\",data.newDraggableIndex);\r\n\r\n              // args_1: where, args_2: index\r\n              this.$bus.$emit(\"cancel-stack-drop\",data.to.getAttribute(\"area-name\"),data.newDraggableIndex);\r\n\r\n              // case when temp area is the same with stack\r\n              // since we use openTemp to refresh the list\r\n              // need to check whether the area-name is same with lastPlace\r\n\r\n              this.$bus.$emit(\"add-to-ex-deck-again\",this.dragCard,data.to.getAttribute(\"area-name\"));\r\n\r\n              break;\r\n          }\r\n\r\n          console.log(\"main to ex-deck error\");\r\n        }\r\n\r\n        this.$bus.$emit(\"main-to-ex-deck\",dropCard,disable_first_drop);\r\n        console.log(\"emit dropCard to discard\");\r\n\r\n      } else if(place == \"excludeds\") {\r\n\r\n        if(this.card_list[this.lastPlaceId] != this.dragCard || typeof this.card_list[this.lastPlaceId] == \"undefined\"){\r\n\r\n          disable_first_drop = 0;\r\n\r\n          // ghost probably lie in somewhere else\r\n\r\n          switch(data.to.getAttribute(\"id\")){\r\n            case \"hands\":\r\n              this.$bus.$emit(\"cancel-hand-drop\",data.newDraggableIndex);\r\n              this.$bus.$emit(\"add-to-excluded-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n              break;\r\n            case \"mains\":\r\n              //this.$bus.$emit(\"cancel-main-drop\",data.newDraggableIndex);\r\n              //this.$bus.$emit(\"add-to-excluded-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n\r\n              if(data.to === data.from && this.card_list[data.newDraggableIndex] === dropCard){\r\n                // implies that the dragged card only changes its position in the original area\r\n                \r\n                this.lastPlaceId = data.newDraggableIndex;\r\n                this.$bus.$emit(\"add-to-excluded-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n                this.card_list.splice(this.lastPlaceId,1);\r\n                console.log(\"in change id\");\r\n              }\r\n              break;\r\n            case \"supports\":\r\n              this.$bus.$emit(\"cancel-support-drop\",data.newDraggableIndex);\r\n              this.$bus.$emit(\"add-to-excluded-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n              break;\r\n            case \"points\":\r\n              this.$bus.$emit(\"cancel-point-drop\",data.newDraggableIndex);\r\n              this.$bus.$emit(\"add-to-excluded-again\",dropCard,data.to.getAttribute(\"area-name\"));\r\n              break;\r\n            case \"temp-area\":\r\n              // special case: it will affect deck-stack area too\r\n              //this.$bus.$emit(\"cancel-temp-drop\",data.newDraggableIndex);\r\n\r\n              // args_1: where, args_2: index\r\n              this.$bus.$emit(\"cancel-stack-drop\",data.to.getAttribute(\"area-name\"),data.newDraggableIndex);\r\n\r\n              // case when temp area is the same with stack\r\n              // since we use openTemp to refresh the list\r\n              // need to check whether the area-name is same with lastPlace\r\n\r\n              this.$bus.$emit(\"add-to-excluded-again\",this.dragCard,data.to.getAttribute(\"area-name\"));\r\n\r\n              break;\r\n          }\r\n\r\n          console.log(\"main to excluded error\");\r\n        }\r\n\r\n        this.$bus.$emit(\"main-to-excluded\",dropCard,disable_first_drop);\r\n      }\r\n\r\n      console.log(\"test\");\r\n      console.log(place);\r\n      console.log(this.lastPlace);\r\n      console.log(data);\r\n      console.log(data.to);\r\n      console.log(data.to.getAttribute(\"area-name\"));\r\n      console.log(data.from);\r\n    },\r\n\r\n    // update the last chosen card\r\n    updateLast(data) {\r\n      this.last_chosen_order = this.card_list[data.oldIndex].order;\r\n      console.log(\"update last\");\r\n      console.log(this.last_chosen_order);\r\n    },\r\n    // clear card state when it's removed\r\n    clearState() {\r\n      this.card_rest[this.last_chosen_order] = \"Rest\";\r\n      this.card_direct[this.last_chosen_order] = false;\r\n      this.showDialog[this.last_chosen_order] = false;\r\n    },\r\n  },\r\n  computed: {\r\n    dragOptions() {\r\n      return {\r\n        animation: 200,\r\n        group: \"description\",\r\n        disabled: false,\r\n        ghostClass: \"ghost\",\r\n      };\r\n    },\r\n  },\r\n  mounted() {\r\n    this.$bus.$on(\"able-to-remove\",(where) => {\r\n      if(where == \"main\"){\r\n        this.card_list.splice(this.lastPlaceId,1);\r\n      }\r\n    });\r\n\r\n    this.$bus.$on(\"cancel-main-drop\",(id) => {\r\n      this.card_list.splice(id,1);\r\n      console.log(\"cancel main drop: \" + id);\r\n    });\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.button {\r\n  margin-top: 35px;\r\n}\r\n.flip-list-move {\r\n  transition: transform 0.5s;\r\n}\r\n.no-move {\r\n  transition: transform 0s;\r\n}\r\n.ghost {\r\n  opacity: 0.5;\r\n  background: #c8ebfb;\r\n}\r\n@main-detail {\r\n  white-space: initial;\r\n}\r\n.card-list {\r\n  min-height: 20px;\r\n  max-width: 100%;\r\n}\r\n.main-item {\r\n  cursor: move;\r\n  float: left;\r\n  //width: 50%;\r\n  //height: 300px;\r\n  //background-image: url(\"../PM_Back.jpg\");\r\n  background-size: 100%;\r\n  background-repeat: no-repeat;\r\n  //background-position: center;\r\n  padding: 0;\r\n  overflow: hidden;\r\n}\r\n.main-item i {\r\n  cursor: pointer;\r\n}\r\n.main-item img {\r\n  vertical-align: top;\r\n  max-width: 100%;\r\n  opacity: 1;\r\n}\r\n#overlap {\r\n  width: 90%;\r\n  margin-bottom: 5px;\r\n}\r\n#rest {\r\n  width: 90%;\r\n}\r\n.card-container {\r\n  overflow-y: auto;\r\n}\r\n.card-container img {\r\n  vertical-align: top;\r\n  max-width: 100%;\r\n}\r\n.overlap-card-list {\r\n  min-height: 20px;\r\n  max-width: 100%;\r\n  overflow-y: auto;\r\n  //padding-right: 10px;\r\n  //padding-left: 10px;\r\n  box-sizing: border-box;\r\n}\r\n#main-detail {\r\n  white-space: normal;\r\n}\r\n\r\n.rotate {\r\n  //background-image: url(\"../PM_Back_Side.jpg\") 0 0 repeat;\r\n  //background-size: 100%;\r\n  //background-repeat: no-repeat;\r\n  -webkit-transform: rotate(90deg);\r\n  -moz-transform: rotate(90deg);\r\n  -ms-transform: rotate(90deg);\r\n  -o-transform: rotate(90deg);\r\n  transform: rotate(90deg);\r\n}\r\n</style>"],"sourceRoot":"src/board/components"}]}